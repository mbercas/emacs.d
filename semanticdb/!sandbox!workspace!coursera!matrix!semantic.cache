;; Object matrix/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "matrix/"
  :tables
  (list
    (semanticdb-table "submit_python_lab.py"
      :major-mode 'python-mode
      :tags 
        '( ("ast" include nil nil [489 612])
            ("random" include nil nil [489 612])
            ("hashlib" include nil nil [489 612])
            ("base64" include nil nil [489 612])
            ("urllib.error" include nil nil [489 612])
            ("urllib.parse" include nil nil [489 612])
            ("urllib.request" include nil nil [489 612])
            ("importlib" include nil nil [489 612])
            ("traceback" include nil nil [489 612])
            ("doctest" include nil nil [489 612])
            ("sys" include nil nil [489 612])
            ("os" include nil nil [489 612])
            ("io" include nil nil [489 612])
            ("URL" variable nil nil [614 646])
            ("partFriendlyNames" variable nil nil [647 1228])
            ("groups" variable nil nil [1229 23217])
            ("sourceFiles" code nil nil [23218 23277])
            ("find_lines" function (:arguments 
              ( ("varname" variable nil (reparse-symbol function_parameters) [23528 23535]))              ) nil [23513 23615])
            ("find_line" function (:arguments 
              ( ("varname" variable nil (reparse-symbol function_parameters) [23630 23637]))              ) nil [23616 23707])
            ("use_comprehension" function (:arguments 
              ( ("varname" variable nil (reparse-symbol function_parameters) [23731 23738]))              ) nil [23709 23936])
            ("double_comprehension" function (:arguments 
              ( ("varname" variable nil (reparse-symbol function_parameters) [23962 23969]))              ) nil [23937 24067])
            ("line_contains_substr" function (:arguments 
              ( ("varname" variable nil (reparse-symbol function_parameters) [24093 24100])
                ("word" variable nil (reparse-symbol function_parameters) [24102 24106]))              ) nil [24068 24229])
            ("test_format" function (:arguments 
              ( ("obj" variable nil (reparse-symbol function_parameters) [24246 24249])
                ("precision" variable nil (reparse-symbol function_parameters) [24251 24260]))              ) nil [24230 25103])
            ("output" function (:arguments 
              ( ("tests" variable nil (reparse-symbol function_parameters) [25117 25122]))              ) nil [25106 25318])
            ("test_vars" variable nil nil [25319 25375])
            ("test_vars" variable nil nil [25376 25412])
            ("test_vars" variable nil nil [25413 25447])
            ("test_vars" variable nil nil [25448 25498])
            ("test_vars" variable nil nil [25499 25555])
            ("test_vars" variable nil nil [25556 25612])
            ("ModifiedDocTestRunner" type
               (:superclasses ("doctest.DocTestRunner")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [25716 25733])
                            ("return" code nil (reparse-symbol indented_block_body) [25742 25835]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25684 25688])
                            ("args" variable nil (reparse-symbol function_parameters) [25690 25695])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [25697 25705]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [25671 25836])
                    ("report_success" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25864 25868])
                            ("out" variable nil (reparse-symbol function_parameters) [25870 25873])
                            ("test" variable nil (reparse-symbol function_parameters) [25875 25879])
                            ("example" variable nil (reparse-symbol function_parameters) [25881 25888])
                            ("got" variable nil (reparse-symbol function_parameters) [25890 25893]))                          )
                        (reparse-symbol indented_block_body) [25845 25929])
                    ("report_unexpected_exception" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25970 25974])
                            ("out" variable nil (reparse-symbol function_parameters) [25976 25979])
                            ("test" variable nil (reparse-symbol function_parameters) [25981 25985])
                            ("example" variable nil (reparse-symbol function_parameters) [25987 25994])
                            ("exc_info" variable nil (reparse-symbol function_parameters) [25996 26004]))                          )
                        (reparse-symbol indented_block_body) [25938 26116]))                  
                :type "class")
                nil [25615 26116])
            ("OutputAccepter" type
               (:superclasses ("doctest.OutputChecker")
                :members 
                  ( ("check_output" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26183 26187])
                            ("want" variable nil (reparse-symbol function_parameters) [26189 26193])
                            ("got" variable nil (reparse-symbol function_parameters) [26195 26198])
                            ("optionflags" variable nil (reparse-symbol function_parameters) [26200 26211]))                          )
                        (reparse-symbol indented_block_body) [26166 26234]))                  
                :type "class")
                nil [26117 26234])
            ("challenge_url" code nil nil [26235 26309])
            ("submit_url" code nil nil [26310 26384])
            ("submit" function nil nil [26386 27602])
            ("loginPrompt" function (:documentation "Prompt the user for login credentials. Returns a tuple (login, password).") nil [27604 28079])
            ("partPrompt" function nil nil [28080 28664])
            ("getChallenge" function
               (:documentation "Gets the challenge salt from the server. Returns (email,ch,state,ch_aux)."
                :arguments 
                  ( ("email" variable nil (reparse-symbol function_parameters) [28682 28687])
                    ("sid" variable nil (reparse-symbol function_parameters) [28689 28692]))                  )
                nil [28665 29373])
            ("challengeResponse" function (:arguments 
              ( ("email" variable nil (reparse-symbol function_parameters) [29396 29401])
                ("passwd" variable nil (reparse-symbol function_parameters) [29403 29409])
                ("challenge" variable nil (reparse-symbol function_parameters) [29411 29420]))              ) nil [29374 29550])
            ("submitSolution" function
               (:documentation "Submits a solution to the server. Returns (result, string)."
                :arguments 
                  ( ("email_address" variable nil (reparse-symbol function_parameters) [29571 29584])
                    ("ch_resp" variable nil (reparse-symbol function_parameters) [29586 29593])
                    ("sid" variable nil (reparse-symbol function_parameters) [29595 29598])
                    ("output" variable nil (reparse-symbol function_parameters) [29600 29606])
                    ("source" variable nil (reparse-symbol function_parameters) [29608 29614])
                    ("state" variable nil (reparse-symbol function_parameters) [29616 29621])
                    ("ch_aux" variable nil (reparse-symbol function_parameters) [29623 29629]))                  )
                nil [29552 30395])
            ("source" function
               (:documentation " This collects the source code, for logging purposes. "
                :arguments 
                  ( ("sid" variable nil (reparse-symbol function_parameters) [30407 30410]))                  )
                nil [30396 30556])
            ("if" code nil nil [30557 30597]))          
      :file "submit_python_lab.py"
      :pointmax 30597
      :fsize 30596
      :lastmodtime '(20944 28812)
      :unmatched-syntax '((RETURN 23673 . 23679) (IF 23686 . 23688) (ELSE 23697 . 23701) (INDENT_BLOCK 23381 . 23512) (COLON 23379 . 23380) (TRY 23279 . 23282) (AS 23373 . 23375)))
    (semanticdb-table "python_lab.py"
      :major-mode 'python-mode
      :tags 
        '( ("minutes_in_week" code nil nil [11 36])
            ("remainder_without_mod" code nil nil [48 98])
            ("divisible_by_3" code nil nil [110 143])
            ("x" code nil nil [155 161])
            ("y" code nil nil [162 169])
            ("statement_val" variable nil nil [170 187])
            ("first_five_squares" variable nil nil [199 249])
            ("first_five_pows_two" variable nil nil [261 312])
            ("X1" variable nil nil [351 367])
            ("Y1" variable nil nil [368 387])
            ("X2" variable nil nil [426 442])
            ("Y2" variable nil nil [443 460])
            ("base" variable nil nil [472 481])
            ("digits" variable nil nil [482 521])
            ("three_digits_set" variable nil nil [522 615])
            ("S" variable nil nil [628 644])
            ("T" variable nil nil [645 661])
            ("S_intersect_T" variable nil nil [662 713])
            ("L_average" code nil nil [726 787])
            ("LofL" variable nil nil [800 846])
            ("LofL_sum" variable nil nil [847 895])
            ("cartesian_product" variable nil nil [908 977])
            ("S" variable nil nil [990 1014])
            ("zero_sum_list" variable nil nil [1015 1086])
            ("exclude_zero_list" variable nil nil [1099 1214])
            ("first_of_tuples_list" variable nil nil [1227 1341])
            ("L1" variable nil nil [1354 1364])
            ("L2" variable nil nil [1406 1417])
            ("odd_num_list_range" variable nil nil [1495 1551])
            ("L" variable nil nil [1564 1589])
            ("range_and_zip" variable nil nil [1590 1639])
            ("list_sum_zip" variable nil nil [1652 1715])
            ("dlist" variable nil nil [1728 1855])
            ("k" variable nil nil [1856 1867])
            ("value_list" variable nil nil [1868 1904])
            ("dlist" variable nil nil [1917 1997])
            ("k" variable nil nil [1998 2009])
            ("value_list_modified_1" code nil nil [2010 2116])
            ("k" variable nil nil [2117 2128])
            ("value_list_modified_2" code nil nil [2129 2235])
            ("square_dict" variable nil nil [2248 2291])
            ("D" variable nil nil [2304 2330])
            ("identity_dict" variable nil nil [2331 2365])
            ("base" variable nil nil [2378 2387])
            ("digits" variable nil nil [2388 2411])
            ("representation_dict" variable nil nil [2412 2514])
            ("d" variable nil nil [2529 2561])
            ("names" variable nil nil [2562 2595])
            ("listdict2dict" variable nil nil [2596 2670])
            ("nextInts" function (:arguments 
              ( ("L" variable nil (reparse-symbol function_parameters) [2696 2697]))              ) nil [2683 2726])
            ("cubes" function (:arguments 
              ( ("L" variable nil (reparse-symbol function_parameters) [2748 2749]))              ) nil [2738 2780])
            ("dict2list" function (:arguments 
              ( ("dct" variable nil (reparse-symbol function_parameters) [2806 2809])
                ("keylist" variable nil (reparse-symbol function_parameters) [2811 2818]))              ) nil [2792 2862])
            ("list2dict" function (:arguments 
              ( ("L" variable nil (reparse-symbol function_parameters) [2889 2890])
                ("keylist" variable nil (reparse-symbol function_parameters) [2892 2899]))              ) nil [2875 2948]))          
      :file "python_lab.py"
      :pointmax 2949
      :fsize 2948
      :lastmodtime '(20945 61682)
      :unmatched-syntax nil)
    (semanticdb-table "inverse_index_lab.py"
      :major-mode 'python-mode
      :tags 
        '( ("random" include nil nil [1 27])
            ("dictutil" include nil nil [28 50])
            ("movie_review" function
               (:documentation "
    Input: the name of a movie
    Output: a string (one of the review options), selected at random using randint
    "
                :arguments 
                  ( ("name" variable nil (reparse-symbol function_parameters) [79 83]))                  )
                nil [62 350])
            ("makeInverseIndex" function
               (:documentation "
    Input: a list of documents as strings
    Output: a dictionary that maps each word in any document to the set consisting of the
            document ids (ie, the index in the strlist) for all documents containing the word.

    Note that to test your function, you are welcome to use the files stories_small.txt
      or stories_big.txt included in the download.
    "
                :arguments 
                  ( ("strlist" variable nil (reparse-symbol function_parameters) [423 430]))                  )
                nil [402 1115])
            ("orSearch" function
               (:documentation "
    Input: an inverse index, as created by makeInverseIndex, and a list of words to query
    Output: the set of document ids that contain _any_ of the specified words
    "
                :arguments 
                  ( ("inverseIndex" variable nil (reparse-symbol function_parameters) [1139 1151])
                    ("query" variable nil (reparse-symbol function_parameters) [1153 1158]))                  )
                nil [1126 1506])
            ("andSearch" function
               (:documentation "
    Input: an inverse index, as created by makeInverseIndex, and a list of words to query
    Output: the set of all document ids that contain _all_ of the specified words
    "
                :arguments 
                  ( ("inverseIndex" variable nil (reparse-symbol function_parameters) [1531 1543])
                    ("query" variable nil (reparse-symbol function_parameters) [1545 1550]))                  )
                nil [1517 2077]))          
      :file "inverse_index_lab.py"
      :pointmax 2077
      :fsize 2076
      :lastmodtime '(20948 36231)
      :unmatched-syntax '((NEWLINE 2037 . 2038) (NAME 1996 . 2001) (NAME 2015 . 2027) (RPAREN 2036 . 2037) (NEWLINE 2037 . 2038) (NAME 1996 . 2001) (NAME 2015 . 2027) (RPAREN 2036 . 2037) (NEWLINE 2024 . 2025) (NAME 1996 . 2001) (NAME 2002 . 2014) (RPAREN 2023 . 2024) (NEWLINE 2024 . 2025) (NAME 1996 . 2001) (NAME 2002 . 2014) (RPAREN 2023 . 2024) (NEWLINE 1954 . 1955) (NAME 1906 . 1911) (NAME 1932 . 1944) (RBRACE 1953 . 1954) (NEWLINE 1954 . 1955) (NAME 1906 . 1911) (NAME 1932 . 1944) (RBRACE 1953 . 1954)))
    (semanticdb-table "dictutil.py"
      :major-mode 'python-mode
      :tags 
        '( ("dict2list" function (:arguments 
              ( ("dct" variable nil (reparse-symbol function_parameters) [25 28])
                ("keylist" variable nil (reparse-symbol function_parameters) [30 37]))              ) nil [11 85])
            ("list2dict" function (:arguments 
              ( ("L" variable nil (reparse-symbol function_parameters) [100 101])
                ("keylist" variable nil (reparse-symbol function_parameters) [103 110]))              ) nil [86 162])
            ("listrange2dict" function
               (:documentation "
    Input: a list
    Output: a dictionary that, for i = 0, 1, 2, . . . , len(L), maps i to L[i]

    You can use list2dict or write this from scratch
    "
                :arguments 
                  ( ("L" variable nil (reparse-symbol function_parameters) [195 196]))                  )
                nil [176 409]))          
      :file "dictutil.py"
      :pointmax 409
      :fsize 408
      :lastmodtime '(20948 30632)
      :unmatched-syntax nil)
    (semanticdb-table "submit_inverse_index_lab.py"
      :major-mode 'python-mode
      :tags 
        '( ("ast" include nil nil [489 612])
            ("random" include nil nil [489 612])
            ("hashlib" include nil nil [489 612])
            ("base64" include nil nil [489 612])
            ("urllib.error" include nil nil [489 612])
            ("urllib.parse" include nil nil [489 612])
            ("urllib.request" include nil nil [489 612])
            ("importlib" include nil nil [489 612])
            ("traceback" include nil nil [489 612])
            ("doctest" include nil nil [489 612])
            ("sys" include nil nil [489 612])
            ("os" include nil nil [489 612])
            ("io" include nil nil [489 612])
            ("URL" variable nil nil [614 646])
            ("partFriendlyNames" variable nil nil [647 784])
            ("groups" variable nil nil [785 2018])
            ("sourceFiles" code nil nil [2019 2085])
            ("find_lines" function (:arguments 
              ( ("varname" variable nil (reparse-symbol function_parameters) [2343 2350]))              ) nil [2328 2430])
            ("find_line" function (:arguments 
              ( ("varname" variable nil (reparse-symbol function_parameters) [2445 2452]))              ) nil [2431 2522])
            ("use_comprehension" function (:arguments 
              ( ("varname" variable nil (reparse-symbol function_parameters) [2546 2553]))              ) nil [2524 2751])
            ("double_comprehension" function (:arguments 
              ( ("varname" variable nil (reparse-symbol function_parameters) [2777 2784]))              ) nil [2752 2882])
            ("line_contains_substr" function (:arguments 
              ( ("varname" variable nil (reparse-symbol function_parameters) [2908 2915])
                ("word" variable nil (reparse-symbol function_parameters) [2917 2921]))              ) nil [2883 3044])
            ("test_format" function (:arguments 
              ( ("obj" variable nil (reparse-symbol function_parameters) [3061 3064])
                ("precision" variable nil (reparse-symbol function_parameters) [3066 3075]))              ) nil [3045 3918])
            ("output" function (:arguments 
              ( ("tests" variable nil (reparse-symbol function_parameters) [3932 3937]))              ) nil [3921 4133])
            ("test_vars" variable nil nil [4134 4190])
            ("test_vars" variable nil nil [4191 4227])
            ("test_vars" variable nil nil [4228 4262])
            ("test_vars" variable nil nil [4263 4313])
            ("test_vars" variable nil nil [4314 4370])
            ("test_vars" variable nil nil [4371 4427])
            ("ModifiedDocTestRunner" type
               (:superclasses ("doctest.DocTestRunner")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [4531 4548])
                            ("return" code nil (reparse-symbol indented_block_body) [4557 4650]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4499 4503])
                            ("args" variable nil (reparse-symbol function_parameters) [4505 4510])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [4512 4520]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4486 4651])
                    ("report_success" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4679 4683])
                            ("out" variable nil (reparse-symbol function_parameters) [4685 4688])
                            ("test" variable nil (reparse-symbol function_parameters) [4690 4694])
                            ("example" variable nil (reparse-symbol function_parameters) [4696 4703])
                            ("got" variable nil (reparse-symbol function_parameters) [4705 4708]))                          )
                        (reparse-symbol indented_block_body) [4660 4744])
                    ("report_unexpected_exception" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4785 4789])
                            ("out" variable nil (reparse-symbol function_parameters) [4791 4794])
                            ("test" variable nil (reparse-symbol function_parameters) [4796 4800])
                            ("example" variable nil (reparse-symbol function_parameters) [4802 4809])
                            ("exc_info" variable nil (reparse-symbol function_parameters) [4811 4819]))                          )
                        (reparse-symbol indented_block_body) [4753 4931]))                  
                :type "class")
                nil [4430 4931])
            ("OutputAccepter" type
               (:superclasses ("doctest.OutputChecker")
                :members 
                  ( ("check_output" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4998 5002])
                            ("want" variable nil (reparse-symbol function_parameters) [5004 5008])
                            ("got" variable nil (reparse-symbol function_parameters) [5010 5013])
                            ("optionflags" variable nil (reparse-symbol function_parameters) [5015 5026]))                          )
                        (reparse-symbol indented_block_body) [4981 5049]))                  
                :type "class")
                nil [4932 5049])
            ("challenge_url" code nil nil [5050 5124])
            ("submit_url" code nil nil [5125 5199])
            ("submit" function nil nil [5201 6417])
            ("loginPrompt" function (:documentation "Prompt the user for login credentials. Returns a tuple (login, password).") nil [6419 6894])
            ("partPrompt" function nil nil [6895 7453])
            ("getChallenge" function
               (:documentation "Gets the challenge salt from the server. Returns (email,ch,state,ch_aux)."
                :arguments 
                  ( ("email" variable nil (reparse-symbol function_parameters) [7471 7476])
                    ("sid" variable nil (reparse-symbol function_parameters) [7478 7481]))                  )
                nil [7454 8162])
            ("challengeResponse" function (:arguments 
              ( ("email" variable nil (reparse-symbol function_parameters) [8185 8190])
                ("passwd" variable nil (reparse-symbol function_parameters) [8192 8198])
                ("challenge" variable nil (reparse-symbol function_parameters) [8200 8209]))              ) nil [8163 8339])
            ("submitSolution" function
               (:documentation "Submits a solution to the server. Returns (result, string)."
                :arguments 
                  ( ("email_address" variable nil (reparse-symbol function_parameters) [8360 8373])
                    ("ch_resp" variable nil (reparse-symbol function_parameters) [8375 8382])
                    ("sid" variable nil (reparse-symbol function_parameters) [8384 8387])
                    ("output" variable nil (reparse-symbol function_parameters) [8389 8395])
                    ("source" variable nil (reparse-symbol function_parameters) [8397 8403])
                    ("state" variable nil (reparse-symbol function_parameters) [8405 8410])
                    ("ch_aux" variable nil (reparse-symbol function_parameters) [8412 8418]))                  )
                nil [8341 9184])
            ("source" function
               (:documentation " This collects the source code, for logging purposes. "
                :arguments 
                  ( ("sid" variable nil (reparse-symbol function_parameters) [9196 9199]))                  )
                nil [9185 9345])
            ("if" code nil nil [9346 9386]))          
      :file "submit_inverse_index_lab.py"
      :pointmax 9386
      :fsize 9385
      :lastmodtime '(20944 31758)
      :unmatched-syntax '((RETURN 2488 . 2494) (IF 2501 . 2503) (ELSE 2512 . 2516) (INDENT_BLOCK 2196 . 2327) (COLON 2194 . 2195) (TRY 2087 . 2090) (AS 2188 . 2190)))
    (semanticdb-table "hw0.py"
      :major-mode 'python-mode
      :tags 
        '( ("myFilter" function (:arguments 
              ( ("L" variable nil (reparse-symbol function_parameters) [112 113])
                ("num" variable nil (reparse-symbol function_parameters) [115 118]))              ) nil [99 164])
            ("myLists" function (:arguments 
              ( ("L" variable nil (reparse-symbol function_parameters) [192 193]))              ) nil [180 244])
            ("myFunctionComposition" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [286 287])
                ("g" variable nil (reparse-symbol function_parameters) [289 290]))              ) nil [260 340])
            ("complex_addition_b" code nil nil [431 458])
            ("001j" code nil nil [487 491])
            ("GF2_sum_1" variable nil nil [540 553])
            ("GF2_sum_2" variable nil nil [554 567])
            ("GF2_sum_3" variable nil nil [568 581])
            ("mySum" function (:arguments 
              ( ("L" variable nil (reparse-symbol function_parameters) [607 608]))              ) nil [597 688])
            ("myProduct" function (:arguments 
              ( ("L" variable nil (reparse-symbol function_parameters) [718 719]))              ) nil [704 798])
            ("myMin" function (:arguments 
              ( ("L" variable nil (reparse-symbol function_parameters) [824 825]))              ) nil [814 936])
            ("myConcat" function (:arguments 
              ( ("L" variable nil (reparse-symbol function_parameters) [968 969]))              ) nil [955 1049])
            ("myUnion" function (:arguments 
              ( ("L" variable nil (reparse-symbol function_parameters) [1078 1079]))              ) nil [1066 1173]))          
      :file "hw0.py"
      :pointmax 1174
      :fsize 1173
      :lastmodtime '(20953 52059)
      :unmatched-syntax nil)
    (semanticdb-table "hw1.py"
      :major-mode 'python-mode
      :tags 
        '( ("GF2" include nil nil [82 101])
            ("p1_u" variable nil nil [118 132])
            ("p1_v" variable nil nil [133 147])
            ("p1_v_plus_u" variable nil nil [148 168])
            ("p1_v_minus_u" variable nil nil [169 191])
            ("p2_u" variable nil nil [240 258])
            ("p2_v" variable nil nil [259 277])
            ("p2_v_plus_u" variable nil nil [278 299])
            ("p2_v_minus_u" variable nil nil [300 323])
            ("p2_two_v_minus_u" variable nil nil [324 351])
            ("p2_v_plus_two_u" variable nil nil [352 377])
            ("p3_vector_sum_1" variable nil nil [454 483])
            ("p3_vector_sum_2" variable nil nil [484 515])
            ("u_0010010" variable nil nil [803 832])
            ("u_0100010" variable nil nil [833 867])
            ("v_0010010" variable nil nil [931 955])
            ("v_0100010" variable nil nil [956 975])
            ("uv_a" variable nil nil [992 1001])
            ("uv_b" variable nil nil [1002 1011])
            ("uv_c" variable nil nil [1012 1021])
            ("uv_d" code nil nil [1022 1031])
            ("x_gf2" variable nil nil [1075 1099])
            ("v1" variable nil nil [1116 1134])
            ("v2" variable nil nil [1135 1153])
            ("v3" variable nil nil [1154 1173]))          
      :file "hw1.py"
      :pointmax 1175
      :fsize 1174
      :lastmodtime '(20958 56030)
      :unmatched-syntax nil)
    (semanticdb-table "GF2.py"
      :file "GF2.py"
      :fsize 673
      :lastmodtime '(20953 52624))
    (semanticdb-table "vec.py"
      :major-mode 'python-mode
      :tags 
        '( ("getitem" function (:arguments 
              ( ("v" variable nil (reparse-symbol function_parameters) [111 112])
                ("d" variable nil (reparse-symbol function_parameters) [113 114]))              ) nil [99 221])
            ("setitem" function (:arguments 
              ( ("v" variable nil (reparse-symbol function_parameters) [234 235])
                ("d" variable nil (reparse-symbol function_parameters) [236 237])
                ("val" variable nil (reparse-symbol function_parameters) [238 241]))              ) nil [222 329])
            ("equal" function (:arguments 
              ( ("u" variable nil (reparse-symbol function_parameters) [340 341])
                ("v" variable nil (reparse-symbol function_parameters) [342 343]))              ) nil [330 464])
            ("add" function (:arguments 
              ( ("u" variable nil (reparse-symbol function_parameters) [473 474])
                ("v" variable nil (reparse-symbol function_parameters) [475 476]))              ) nil [465 620])
            ("dot" function (:arguments 
              ( ("u" variable nil (reparse-symbol function_parameters) [629 630])
                ("v" variable nil (reparse-symbol function_parameters) [631 632]))              ) nil [621 790])
            ("scalar_mul" function (:arguments 
              ( ("v" variable nil (reparse-symbol function_parameters) [806 807])
                ("alpha" variable nil (reparse-symbol function_parameters) [809 814]))              ) nil [791 964])
            ("neg" function (:arguments 
              ( ("v" variable nil (reparse-symbol function_parameters) [973 974]))              ) nil [965 1087])
            ("Vec" type
               (:documentation "
    A vector has two fields:
    D - the domain (a set)
    f - a dictionary mapping (some) domain elements to field elements
        elements of D not appearing in f are implicitly mapped to zero
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1382 1397])
                            ("self" variable nil (reparse-symbol indented_block_body) [1406 1423]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1370 1374])
                            ("labels" variable nil (reparse-symbol function_parameters) [1376 1382])
                            ("function" variable nil (reparse-symbol function_parameters) [1392 1400]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1357 1458])
                    ("__getitem__" variable nil (reparse-symbol indented_block_body) [1463 1484])
                    ("__setitem__" variable nil (reparse-symbol indented_block_body) [1489 1510])
                    ("__neg__" variable nil (reparse-symbol indented_block_body) [1515 1528])
                    ("__rmul__" variable nil (reparse-symbol indented_block_body) [1533 1554])
                    ("__mul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1625 1629])
                            ("other" variable nil (reparse-symbol function_parameters) [1630 1635]))                          )
                        (reparse-symbol indented_block_body) [1613 1879])
                    ("__truediv__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1900 1904])
                            ("other" variable nil (reparse-symbol function_parameters) [1905 1910]))                          )
                        (reparse-symbol indented_block_body) [1884 1962])
                    ("__add__" variable nil (reparse-symbol indented_block_body) [1967 1980])
                    ("__radd__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1999 2003])
                            ("other" variable nil (reparse-symbol function_parameters) [2005 2010]))                          )
                        (reparse-symbol indented_block_body) [1986 2114])
                    ("__sub__" function (:arguments 
                      ( ("a" variable nil (reparse-symbol function_parameters) [2135 2136])
                        ("b" variable nil (reparse-symbol function_parameters) [2137 2138]))                      ) (reparse-symbol indented_block_body) [2123 2228])
                    ("__eq__" variable nil (reparse-symbol indented_block_body) [2233 2247])
                    ("__str__" function (:arguments 
                      ( ("v" variable nil (reparse-symbol function_parameters) [2265 2266]))                      ) (reparse-symbol indented_block_body) [2253 3048])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3066 3070]))                          )
                        (reparse-symbol indented_block_body) [3053 3135])
                    ("copy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3149 3153]))                          )
                        (reparse-symbol indented_block_body) [3140 3246]))                  
                :type "class")
                nil [1129 3246]))          
      :file "vec.py"
      :pointmax 3247
      :fsize 3246
      :lastmodtime '(20972 7054)
      :unmatched-syntax nil)
    (semanticdb-table "politics_lab.py"
      :major-mode 'python-mode
      :tags 
        '( ("voting_data" variable nil nil [1 54])
            ("create_voting_dict" function (:documentation "
    Input: None (use voting_data above)
    Output: A dictionary that maps the last name of a senator
            to a list of numbers representing the senator's voting
            record.
    Example: 
        >>> create_voting_dict()['Clinton']
        [-1, 1, 1, 1, 0, 0, -1, 1, 1, 1, 1, 1, 1, 1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, 1]

    This procedure should return a dictionary that maps the last name
    of a senator to a list of numbers representing that senator's
    voting record, using the list of strings from the dump file (strlist). You
    will need to use the built-in procedure int() to convert a string
    representation of an integer (e.g. '1') to the actual integer
    (e.g. 1).

    You can use the split() procedure to split each line of the
    strlist into a list; the first element of the list will be the senator's
    name, the second will be his/her party affiliation (R or D), the
    third will be his/her home state, and the remaining elements of
    the list will be that senator's voting record on a collection of bills.
    A \"1\" represents a 'yea' vote, a \"-1\" a 'nay', and a \"0\" an abstention.

    The lists for each senator should preserve the order listed in voting data. 
    ") nil [67 1489])
            ("policy_compare" function
               (:documentation "
    Input: last names of sen_a and sen_b, and a voting dictionary mapping senator
           names to lists representing their voting records.
    Output: the dot-product (as a number) representing the degree of similarity
            between two senators' voting policies
    Example:
        >>> voting_dict = {'Fox-Epstein':[-1,-1,-1,1],'Ravella':[1,1,1,1]}
        >>> policy_compare('Fox-Epstein','Ravella', voting_dict)
        -2
    "
                :arguments 
                  ( ("sen_a" variable nil (reparse-symbol function_parameters) [1525 1530])
                    ("sen_b" variable nil (reparse-symbol function_parameters) [1532 1537])
                    ("voting_dict" variable nil (reparse-symbol function_parameters) [1539 1550]))                  )
                nil [1506 2091])
            ("most_similar" function
               (:documentation "
    Input: the last name of a senator, and a dictionary mapping senator names
           to lists representing their voting records.
    Output: the last name of the senator whose political mindset is most
            like the input senator (excluding, of course, the input senator
            him/herself). Resolve ties arbitrarily.
    Example:
        >>> vd = {'Klein': [1,1,1], 'Fox-Epstein': [1,-1,0], 'Ravella': [-1,0,0]}
        >>> most_similar('Klein', vd)
        'Fox-Epstein'

    Note that you can (and are encouraged to) re-use you policy_compare procedure.
    "
                :arguments 
                  ( ("sen" variable nil (reparse-symbol function_parameters) [2121 2124])
                    ("voting_dict" variable nil (reparse-symbol function_parameters) [2126 2137]))                  )
                nil [2104 3079])
            ("least_similar" function
               (:documentation "
    Input: the last name of a senator, and a dictionary mapping senator names
           to lists representing their voting records.
    Output: the last name of the senator whose political mindset is least like the input
            senator.
    Example:
        >>> vd = {'Klein': [1,1,1], 'Fox-Epstein': [1,-1,0], 'Ravella': [-1,0,0]}
        >>> least_similar('Klein', vd)
        'Ravella'
    "
                :arguments 
                  ( ("sen" variable nil (reparse-symbol function_parameters) [3114 3117])
                    ("voting_dict" variable nil (reparse-symbol function_parameters) [3119 3130]))                  )
                nil [3096 3900])
            ("most_like_chafee" variable nil nil [3923 3955])
            ("least_like_santorum" variable nil nil [3956 3988])
            ("find_average_similarity" function
               (:documentation "
    Input: the name of a senator, a set of senator names, and a voting dictionary.
    Output: the average dot-product between sen and those in sen_set.
    Example:
        >>> vd = {'Klein': [1,1,1], 'Fox-Epstein': [1,-1,0], 'Ravella': [-1,0,0]}
        >>> find_average_similarity('Klein', {'Fox-Epstein','Ravella'}, vd)
        -0.5
    "
                :arguments 
                  ( ("sen" variable nil (reparse-symbol function_parameters) [4031 4034])
                    ("sen_set" variable nil (reparse-symbol function_parameters) [4036 4043])
                    ("voting_dict" variable nil (reparse-symbol function_parameters) [4045 4056]))                  )
                nil [4003 4521])
            ("democrats_set" variable nil nil [4522 4617])
            ("find_most_averate_democrat" function (:arguments 
              ( ("voting_dict" variable nil (reparse-symbol function_parameters) [4651 4662]))              ) nil [4619 5262])
            ("most_average_Democrat" variable nil nil [5263 5337])
            ("find_average_record" function
               (:documentation "
    Input: a set of last names, a voting dictionary
    Output: a vector containing the average components of the voting records
            of the senators in the input set
    Example: 
        >>> voting_dict = {'Klein': [-1,0,1], 'Fox-Epstein': [-1,-1,-1], 'Ravella': [0,0,1]}
        >>> find_average_record({'Fox-Epstein','Ravella'}, voting_dict)
        [-0.5, -0.5, 0.0]
    "
                :arguments 
                  ( ("sen_set" variable nil (reparse-symbol function_parameters) [5374 5381])
                    ("voting_dict" variable nil (reparse-symbol function_parameters) [5383 5394]))                  )
                nil [5350 5792])
            ("find_average_record" function (:arguments 
              ( ("sen_set" variable nil (reparse-symbol function_parameters) [5817 5824])
                ("voting_dict" variable nil (reparse-symbol function_parameters) [5826 5837]))              ) nil [5792 6110])
            ("average_Democrat_record" variable nil nil [6111 6195])
            ("bitter_rivals" function
               (:documentation "
    Input: a dictionary mapping senator names to lists representing
           their voting records
    Output: a tuple containing the two senators who most strongly
            disagree with one another.
    Example: 
        >>> voting_dict = {'Klein': [-1,0,1], 'Fox-Epstein': [-1,-1,-1], 'Ravella': [0,0,1]}
        >>> bitter_rivals(voting_dict)
        ('Fox-Epstein', 'Ravella')
    "
                :arguments 
                  ( ("voting_dict" variable nil (reparse-symbol function_parameters) [6226 6237]))                  )
                nil [6208 7104]))          
      :file "politics_lab.py"
      :pointmax 7182
      :fsize 7104
      :lastmodtime '(20960 31952)
      :unmatched-syntax nil)
    (semanticdb-table "hw2.py"
      :major-mode 'python-mode
      :tags 
        '( ("vec" include nil nil [101 120])
            ("GF2" include nil nil [121 140])
            ("vec_select" function (:arguments 
              ( ("veclist" variable nil (reparse-symbol function_parameters) [171 178])
                ("k" variable nil (reparse-symbol function_parameters) [180 181]))              ) nil [156 511])
            ("vec_sum" function (:arguments 
              ( ("veclist" variable nil (reparse-symbol function_parameters) [524 531])
                ("D" variable nil (reparse-symbol function_parameters) [533 534]))              ) nil [512 988])
            ("vec_select_sum" function (:arguments 
              ( ("veclist" variable nil (reparse-symbol function_parameters) [1008 1015])
                ("k" variable nil (reparse-symbol function_parameters) [1017 1018])
                ("D" variable nil (reparse-symbol function_parameters) [1020 1021]))              ) nil [989 1341])
            ("scale_vecs" function (:arguments 
              ( ("vecdict" variable nil (reparse-symbol function_parameters) [1372 1379]))              ) nil [1357 1640])
            ("GF2_span" function (:arguments 
              ( ("D" variable nil (reparse-symbol function_parameters) [1669 1670])
                ("L" variable nil (reparse-symbol function_parameters) [1672 1673]))              ) nil [1656 2301])
            ("is_it_a_vector_space_1" variable nil nil [2351 2380])
            ("is_it_a_vector_space_2" variable nil nil [2381 2411])
            ("is_it_a_vector_space_3" variable nil nil [2428 2457])
            ("is_it_a_vector_space_4" variable nil nil [2458 2488])
            ("is_it_a_vector_space_5" variable nil nil [2505 2534])
            ("is_it_a_vector_space_6" variable nil nil [2535 2565]))          
      :file "hw2.py"
      :pointmax 2566
      :fsize 2565
      :lastmodtime '(20972 12400)
      :unmatched-syntax '(($EOI 2575 . 2575) (PERIOD 2561 . 2562) (PERIOD 2560 . 2561) (NAME 2534 . 2556) (PERIOD 2559 . 2560) (PERIOD 2532 . 2533) (PERIOD 2531 . 2532) (NAME 2505 . 2527) (PERIOD 2530 . 2531) ($EOI 2563 . 2563) (PERIOD 2561 . 2562) (PERIOD 2560 . 2561) (NAME 2534 . 2556) (PERIOD 2559 . 2560) (PERIOD 2532 . 2533) (PERIOD 2531 . 2532) (NAME 2505 . 2527) (PERIOD 2530 . 2531) (PERIOD 2558 . 2559) (PERIOD 2557 . 2558) (NAME 2531 . 2553) (PERIOD 2556 . 2557) (PERIOD 2529 . 2530) (PERIOD 2528 . 2529) (NAME 2502 . 2524) (PERIOD 2527 . 2528) (PERIOD 2484 . 2485) (PERIOD 2483 . 2484) (NAME 2457 . 2479) (PERIOD 2482 . 2483) (PERIOD 2455 . 2456) (PERIOD 2454 . 2455) (NAME 2428 . 2450) (PERIOD 2453 . 2454) ($EOI 2560 . 2560) (PERIOD 2559 . 2560) (PERIOD 2558 . 2559) (NAME 2532 . 2554) (PERIOD 2557 . 2558) (PERIOD 2530 . 2531) (PERIOD 2529 . 2530) (NAME 2503 . 2525) (PERIOD 2528 . 2529) (PERIOD 2485 . 2486) (PERIOD 2484 . 2485) (NAME 2458 . 2480) (PERIOD 2483 . 2484) (PERIOD 2456 . 2457) (PERIOD 2455 . 2456) (NAME 2429 . 2451) (PERIOD 2454 . 2455) (PERIOD 2557 . 2558) (PERIOD 2556 . 2557) (NAME 2530 . 2552) (PERIOD 2555 . 2556) (PERIOD 2528 . 2529) (PERIOD 2527 . 2528) (NAME 2501 . 2523) (PERIOD 2526 . 2527) (PERIOD 2483 . 2484) (PERIOD 2482 . 2483) (NAME 2456 . 2478) (PERIOD 2481 . 2482) (PERIOD 2454 . 2455) (PERIOD 2453 . 2454) (NAME 2427 . 2449) (PERIOD 2452 . 2453) ($EOI 2559 . 2559) (PERIOD 2557 . 2558) (PERIOD 2556 . 2557) (NAME 2530 . 2552) (PERIOD 2555 . 2556) (PERIOD 2528 . 2529) (PERIOD 2527 . 2528) (NAME 2501 . 2523) (PERIOD 2526 . 2527) (PERIOD 2483 . 2484) (PERIOD 2482 . 2483) (NAME 2456 . 2478) (PERIOD 2481 . 2482) (PERIOD 2454 . 2455) (PERIOD 2453 . 2454) (NAME 2427 . 2449) (PERIOD 2452 . 2453) (PERIOD 2556 . 2557) (PERIOD 2555 . 2556) (NAME 2529 . 2551) (PERIOD 2554 . 2555) (PERIOD 2527 . 2528) (PERIOD 2526 . 2527) (NAME 2500 . 2522) (PERIOD 2525 . 2526) (PERIOD 2482 . 2483) (PERIOD 2481 . 2482) (NAME 2455 . 2477) (PERIOD 2480 . 2481) (PERIOD 2453 . 2454) (PERIOD 2452 . 2453) (NAME 2426 . 2448) (PERIOD 2451 . 2452) (PERIOD 2408 . 2409) (PERIOD 2407 . 2408) (NAME 2381 . 2403) (PERIOD 2406 . 2407)))
    (semanticdb-table "hw3.py"
      :major-mode 'python-mode
      :tags 
        '( ("mat" include nil nil [101 120])
            ("vec" include nil nil [121 140])
            ("vector_matrix_product_1" variable nil nil [201 232])
            ("vector_matrix_product_2" variable nil nil [233 267])
            ("vector_matrix_product_3" variable nil nil [268 306])
            ("M_swap_two_vector" variable nil nil [428 461])
            ("three_by_three_matrix" variable nil nil [478 527])
            ("multiplied_matrix" variable nil nil [583 628])
            ("part_1_valid" variable nil nil [814 834])
            ("part_1_number_rows" variable nil nil [851 876])
            ("part_1_number_cols" variable nil nil [895 920])
            ("part_2_valid" variable nil nil [940 960])
            ("part_2_number_rows" variable nil nil [961 986])
            ("part_2_number_cols" variable nil nil [987 1012])
            ("part_3_valid" variable nil nil [1014 1033])
            ("part_3_number_rows" variable nil nil [1034 1056])
            ("part_3_number_cols" variable nil nil [1057 1079])
            ("part_4_valid" variable nil nil [1081 1100])
            ("part_4_number_rows" variable nil nil [1101 1123])
            ("part_4_number_cols" variable nil nil [1124 1146])
            ("part_5_valid" variable nil nil [1148 1168])
            ("part_5_number_rows" variable nil nil [1169 1194])
            ("part_5_number_cols" variable nil nil [1195 1220])
            ("part_6_valid" variable nil nil [1222 1241])
            ("part_6_number_rows" variable nil nil [1242 1264])
            ("part_6_number_cols" variable nil nil [1265 1287])
            ("part_7_valid" variable nil nil [1289 1308])
            ("part_7_number_rows" variable nil nil [1309 1331])
            ("part_7_number_cols" variable nil nil [1332 1354])
            ("small_mat_mult_1" variable nil nil [1428 1462])
            ("small_mat_mult_2" variable nil nil [1463 1501])
            ("small_mat_mult_3" variable nil nil [1502 1527])
            ("small_mat_mult_4" variable nil nil [1528 1549])
            ("small_mat_mult_5" variable nil nil [1550 1594])
            ("small_mat_mult_6" variable nil nil [1595 1636])
            ("column_row_vector_multiplication1" variable nil nil [2603 2657])
            ("column_row_vector_multiplication2" variable nil nil [2659 2716])
            ("column_row_vector_multiplication3" variable nil nil [2718 2778])
            ("column_row_vector_multiplication4" variable nil nil [2780 2833])
            ("column_row_vector_multiplication5" variable nil nil [2835 2892])
            ("lin_comb_mat_vec_mult" function (:arguments 
              ( ("M" variable nil (reparse-symbol function_parameters) [2936 2937])
                ("v" variable nil (reparse-symbol function_parameters) [2939 2940]))              ) nil [2910 2978])
            ("lin_comb_vec_mat_mult" function (:arguments 
              ( ("v" variable nil (reparse-symbol function_parameters) [3021 3022])
                ("M" variable nil (reparse-symbol function_parameters) [3024 3025]))              ) nil [2995 3063])
            ("dot_product_mat_vec_mult" function (:arguments 
              ( ("M" variable nil (reparse-symbol function_parameters) [3109 3110])
                ("v" variable nil (reparse-symbol function_parameters) [3112 3113]))              ) nil [3080 3151])
            ("dot_product_vec_mat_mult" function (:arguments 
              ( ("v" variable nil (reparse-symbol function_parameters) [3197 3198])
                ("M" variable nil (reparse-symbol function_parameters) [3200 3201]))              ) nil [3168 3239])
            ("Mv_mat_mat_mult" function (:arguments 
              ( ("A" variable nil (reparse-symbol function_parameters) [3276 3277])
                ("B" variable nil (reparse-symbol function_parameters) [3279 3280]))              ) nil [3256 3320])
            ("vM_mat_mat_mult" function (:arguments 
              ( ("A" variable nil (reparse-symbol function_parameters) [3357 3358])
                ("B" variable nil (reparse-symbol function_parameters) [3360 3361]))              ) nil [3337 3401])
            ("dot_prod_mat_mat_mult" function (:arguments 
              ( ("A" variable nil (reparse-symbol function_parameters) [3444 3445])
                ("B" variable nil (reparse-symbol function_parameters) [3447 3448]))              ) nil [3418 3488])
            ("solving_systems_m" variable nil nil [3605 3653])
            ("solving_systems_a" variable nil nil [3654 3702])
            ("solving_systems_a_times_m" variable nil nil [3703 3759])
            ("solving_systems_m_times_a" variable nil nil [3760 3816]))          
      :file "hw3.py"
      :pointmax 3956
      :fsize 3973
      :lastmodtime '(20981 19581)
      :unmatched-syntax nil)
    (semanticdb-table "mat.py"
      :file "mat.py"
      :fsize 3391
      :lastmodtime '(20972 26798)))
  :file "!sandbox!workspace!coursera!matrix!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
