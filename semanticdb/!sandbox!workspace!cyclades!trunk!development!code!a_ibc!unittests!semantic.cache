;; Object unittests/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "unittests/"
  :tables
  (list
    (semanticdb-table "test_ccapp_ibc_bmodecoordinator.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("TEST_CCAPP_IBC_BMODECOORDINATOR_HPP" variable (:constant-flag t) nil [808 843])
            ("ccapp_ibc_bmodecoordinator.hpp" include nil nil [919 960])
            ("ccapp_ibc_allcoordinationlayereventmaps.hpp" include nil nil [961 1015])
            ("ccapp_ibt_upvtocontrolevents.hpp" include nil nil [1017 1060])
            ("core_gmk_expectcall.hpp" include nil nil [1062 1096])
            ("mock/mock_ccapp_ibm_bmodecontrolsmodeliface.hpp" include nil nil [1098 1156])
            ("mock/mock_ccapp_ibv_bmodecontrolsviewiface.hpp" include nil nil [1157 1214])
            ("memory" include (:system-flag t) nil [1216 1233])
            ("cxxtest/TestSuite.h" include (:system-flag t) nil [1235 1265])
            ("testBModeCoordinator" type
               (:members 
                  ( ("ezono::ccapp::ibc" using (:type ("ezono::ccapp::ibc" type
                         (:prototype t
                          :type "namespace")
                          nil nil)) (reparse-symbol namespacesubparts) [1898 1932])
                    ("ezono::ccapp::ibt::events" using (:type ("ezono::ccapp::ibt::events" type
                         (:prototype t
                          :type "namespace")
                          nil nil)) (reparse-symbol namespacesubparts) [1933 1975])
                    ("ezono::ccapp::sfm" using (:type ("ezono::ccapp::sfm" type
                         (:prototype t
                          :type "namespace")
                          nil nil)) (reparse-symbol namespacesubparts) [1976 2010])
                    ("ezono::ccapp" using (:type ("ezono::ccapp" type
                         (:prototype t
                          :type "namespace")
                          nil nil)) (reparse-symbol namespacesubparts) [2011 2040])
                    ("ezono::core::cbk" using (:type ("ezono::core::cbk" type
                         (:prototype t
                          :type "namespace")
                          nil nil)) (reparse-symbol namespacesubparts) [2042 2075])
                    ("mock::ezono::ccapp::ibm" using (:type ("mock::ezono::ccapp::ibm" type
                         (:prototype t
                          :type "namespace")
                          nil nil)) (reparse-symbol namespacesubparts) [2077 2117])
                    ("mock::ezono::ccapp::ibv" using (:type ("mock::ezono::ccapp::ibv" type
                         (:prototype t
                          :type "namespace")
                          nil nil)) (reparse-symbol namespacesubparts) [2118 2158])
                    ("testing" variable (:type "int") (reparse-symbol namespacesubparts) [2178 2186])
                    ("BModeCoordinatorUnitTestSuite" type
                       (:superclasses 
                          ( ("CxxTest::TestSuite" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [2258 2265])
                            ("setUp" function (:type "void") (reparse-symbol classsubparts) [2329 2403])
                            ("tearDown" function (:type "void") (reparse-symbol classsubparts) [2469 2538])
                            ("test_ImageSettingsChange_UpdatesModelAndView_Bmode" function (:type "void") (reparse-symbol classsubparts) [2663 3185])
                            ("test_ImageSettingsChange_UpdatesModelAndView_BBmode" function (:type "void") (reparse-symbol classsubparts) [3195 3943])
                            ("test_ActivateScanMode_UpdatesModelAndView_BMode" function (:type "void") (reparse-symbol classsubparts) [3953 5203])
                            ("test_ActivateScanMode_UpdatesModelAndView_CMode" function (:type "void") (reparse-symbol classsubparts) [5213 6124])
                            ("test_ActivateScanMode_UpdatesModelAndView_MMode" function (:type "void") (reparse-symbol classsubparts) [6134 7045])
                            ("private" label nil (reparse-symbol classsubparts) [7051 7059])
                            ("TestFixture" type
                               (:members 
                                  ( ("TestFixture" function
                                       (:constructor-flag t
                                        :type ("TestFixture" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [7110 7483])
                                    ("ObjectUnderTest" type
                                       (:typedef ("BModeCoordinator" type (:type "class") nil nil)
                                        :superclasses "BModeCoordinator"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [7497 7539])
                                    ("MakeObjectUnderTest" function (:type ("std::unique_ptr" type
                                         (:template-specifier 
                                            ( ("ObjectUnderTest" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [7553 7807])
                                    ("ExpectImageStyleUpdate" function
                                       (:arguments 
                                          ( ("mode" variable
                                               (:constant-flag t
                                                :type ("sfm::ModeOfOperation" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7850 7882])
                                            ("line" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [7883 7899]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [7821 8934])
                                    ("ExpectViewModeUpdate" function
                                       (:arguments 
                                          ( ("mode" variable
                                               (:constant-flag t
                                                :type ("sfm::ModeOfOperation" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8975 9007])
                                            ("line" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [9008 9024]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [8948 9449])
                                    ("AnnounceImageSettingsChange" function
                                       (:arguments 
                                          ( ("mode" variable
                                               (:constant-flag t
                                                :type ("sfm::ModeOfOperation" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [9497 9530]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [9463 9876])
                                    ("VerifyAndClearExpectations" function (:type "void") (reparse-symbol classsubparts) [9890 10070])
                                    ("model" variable (:type ("MockBmodeControlsModel" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10084 10114])
                                    ("view" variable (:type ("MockBmodeControlsView" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10127 10156])
                                    ("fromUpvEventMap" variable (:type ("FromUpvEventMap" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10170 10210])
                                    ("bmodeSettings" variable (:type ("BModeUserSettings" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10224 10262]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [7069 10273])
                            ("fxt" variable (:type ("std::unique_ptr" type
                                 (:template-specifier 
                                    ( ("TestFixture" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [10283 10321]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2188 10325]))                  
                :type "namespace")
                nil [1865 10328])
            ("testBModeCoordinator::BModeCoordinatorUnitTestSuite" using (:type ("testBModeCoordinator::BModeCoordinatorUnitTestSuite" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [10354 10412]))          
      :file "test_ccapp_ibc_bmodecoordinator.hpp"
      :pointmax 10514
      :fsize 10512
      :lastmodtime '(21379 18872 627434 353000)
      :unmatched-syntax nil
      :lexical-table 
        '(("TEST_CCAPP_IBC_BMODECOORDINATOR_HPP")
          )
))
  :file "!sandbox!workspace!cyclades!trunk!development!code!a_ibc!unittests!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
