;; Object Modelling/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Modelling/"
  :tables
  (list
    (semanticdb-table "lookup_rotation_earth_multipole_4pole.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [20 87])
            ("numpy.linalg" include nil nil [88 118])
            ("bisect" include nil nil [119 144])
            ("probeDefinitions" include nil nil [145 189])
            ("LookupTableGenerator" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [253 296])
                            ("self" variable nil (reparse-symbol indented_block_body) [305 348])
                            ("self" variable nil (reparse-symbol indented_block_body) [366 410])
                            ("self" variable nil (reparse-symbol indented_block_body) [420 473])
                            ("self" variable nil (reparse-symbol indented_block_body) [482 513]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [237 241]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [223 514])
                    ("CreateSyntheticLut" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [543 547])
                            ("multipole" variable nil (reparse-symbol function_parameters) [549 558]))                          
                        :documentation "
        Calculates the field table in cylindrical coordinates (z - along the needle, 
        p - around the needle )

        @param [in]  multipole a class multipole containing the positionf of 
                     the poles along the needle and the magnetization value
                     for each of the poles
        ")
                        (reparse-symbol indented_block_body) [519 1221])
                    ("Interpolate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1243 1247])
                            ("B" variable nil (reparse-symbol function_parameters) [1249 1250])
                            ("pIdx" variable nil (reparse-symbol function_parameters) [1252 1256])
                            ("xIdx" variable nil (reparse-symbol function_parameters) [1258 1262])
                            ("p" variable nil (reparse-symbol function_parameters) [1264 1265])
                            ("z" variable nil (reparse-symbol function_parameters) [1267 1268]))                          
                        :documentation "
        Apply bilinear interpolation
        
        @param B     [in] the field matrix on which to interpolate
        @param pIndx [in] the closer index in the matrix in the p axis
        @param zIdx  [in] the closer index in the matrix in the z axis
        @param p     [in] the value of p
        @param z     [in] the value of z

        @returns the interpolated field across the 4 closest points in the
                 matrix
        ")
                        (reparse-symbol indented_block_body) [1226 2312])
                    ("LookUp" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2348 2352])
                            ("p" variable nil (reparse-symbol function_parameters) [2354 2355])
                            ("z" variable nil (reparse-symbol function_parameters) [2357 2358]))                          
                        :documentation "
        Returns the value of field for a tip in p,z (cylindrical coordinates); input 
        assumes that the data is in the needle's coordinate system.

        @param [in] p The estimated position in the p (it can be an array of positions)
        @param [in] z The estimated postion in the Z (it can be an array of positions)

        @returns a duple containing the arrays of fields in P and Z. (interpolates
                 between the 4 nearest neighbors.
        ")
                        (reparse-symbol indented_block_body) [2336 3524]))                  
                :type "class")
                nil [191 3524])
            ("SensorDataGenerator" type
               (:documentation "
    An emulator to generate the readings for the sensors.
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [3703 3729])
                            ("self" variable nil (reparse-symbol indented_block_body) [3738 3766])
                            ("self" variable nil (reparse-symbol indented_block_body) [3775 3803])
                            ("self" variable nil (reparse-symbol indented_block_body) [3812 3840])
                            ("self" variable nil (reparse-symbol indented_block_body) [3849 3873]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3667 3671])
                            ("multipole" variable nil (reparse-symbol function_parameters) [3673 3682])
                            ("sensors" variable nil (reparse-symbol function_parameters) [3684 3691]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3653 3874])
                    ("FieldCartesian" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3899 3903])
                            ("tip" variable nil (reparse-symbol function_parameters) [3905 3908])
                            ("direction" variable nil (reparse-symbol function_parameters) [3910 3919]))                          
                        :documentation "
        Calculates the field for the multipole which with the tip and direction specified
        at the (0,0,0) point

        @param tip       [in] an array of postions of the tip in Cartesian (x,y,z) coordinates.
        @param direction [in] an array of the direction vectors of the needle in Cartesian
                              coordinates.

        ")
                        (reparse-symbol indented_block_body) [3879 5038]))                  
                :type "class")
                nil [3548 5038])
            ("Multipole" type
               (:documentation "
    A class for defining an arbitrary multipole; the needle is modeled 
    along the z axis, the tip is at (0,0) and the poles are modeled
    as displaced from the tip
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [5288 5333])
                            ("self" variable nil (reparse-symbol indented_block_body) [5342 5386])
                            ("self" variable nil (reparse-symbol indented_block_body) [5395 5439]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5260 5264])
                            ("mag" variable nil (reparse-symbol function_parameters) [5266 5269]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5246 5440]))                  
                :type "class")
                nil [5039 5440])
            ("if" code nil nil [5451 5899]))          
      :file "lookup_rotation_earth_multipole_4pole.py"
      :pointmax 5909
      :fsize 5908
      :lastmodtime '(21599 51821 650032 663000)
      :unmatched-syntax nil)
    (semanticdb-table "probeDefinitions.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [21 44])
            ("validProbeNames" variable nil nil [46 73])
            ("SensorCoordinates" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [134 153])
                            ("self" variable nil (reparse-symbol indented_block_body) [162 181])
                            ("self" variable nil (reparse-symbol indented_block_body) [190 209]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [118 122]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [104 210]))                  
                :type "class")
                nil [75 210])
            ("sPL3_12" variable nil nil [276 305])
            ("sPL3_12" variable nil nil [306 980])
            ("sPL3_12" variable nil nil [982 1641])
            ("sPL3_12" variable nil nil [1643 2301])
            ("sensorPositions" variable nil nil [2307 2327])
            ("sensorPositions" variable nil nil [2328 2362])
            ("for" code nil nil [2366 2434]))          
      :file "probeDefinitions.py"
      :pointmax 2434
      :fsize 2433
      :lastmodtime '(21607 17460 396556 613000)
      :unmatched-syntax nil)
    (semanticdb-table "SensorDataGenerator.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [20 77])
            ("numpy.linalg" include nil nil [78 108])
            ("Multipole" include nil nil [109 144])
            ("SensorDataGenerator" type
               (:documentation "
    An emulator to generate the readings for the sensors.
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [322 348])
                            ("self" variable nil (reparse-symbol indented_block_body) [357 385])
                            ("self" variable nil (reparse-symbol indented_block_body) [394 422])
                            ("self" variable nil (reparse-symbol indented_block_body) [431 459])
                            ("self" variable nil (reparse-symbol indented_block_body) [468 492]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [286 290])
                            ("multipole" variable nil (reparse-symbol function_parameters) [292 301])
                            ("sensors" variable nil (reparse-symbol function_parameters) [303 310]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [272 493])
                    ("FieldCartesian" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [518 522])
                            ("tip" variable nil (reparse-symbol function_parameters) [524 527])
                            ("direction" variable nil (reparse-symbol function_parameters) [529 538]))                          
                        :documentation "
        Calculates the field for the multipole which with the tip and direction specified
        at the (0,0,0) point

        @param tip       [in] an array of postions of the tip in Cartesian (x,y,z) coordinates.
        @param direction [in] an array of the direction vectors of the needle in Cartesian
                              coordinates.

        ")
                        (reparse-symbol indented_block_body) [498 1690]))                  
                :type "class")
                nil [167 1690]))          
      :file "SensorDataGenerator.py"
      :pointmax 1690
      :fsize 1689
      :lastmodtime '(21604 52600 645486 269000)
      :unmatched-syntax '(($EOI 1690 . 1690)))
    (semanticdb-table "Multipole.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [20 44])
            ("Multipole" type
               (:documentation "
    A class for defining an arbitrary multipole; the needle is modeled 
    along the z axis, the tip is at (0,0) and the poles are modeled
    as displaced from the tip
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [296 341])
                            ("self" variable nil (reparse-symbol indented_block_body) [350 394])
                            ("self" variable nil (reparse-symbol indented_block_body) [403 447]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [268 272])
                            ("mag" variable nil (reparse-symbol function_parameters) [274 277]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [254 448])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [474 478]))                          )
                        (reparse-symbol indented_block_body) [461 762]))                  
                :type "class")
                nil [47 762]))          
      :file "Multipole.py"
      :pointmax 762
      :fsize 761
      :lastmodtime '(21612 64167 509405 45000)
      :unmatched-syntax nil)
    (semanticdb-table "LookupTableGenerator.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [20 104])
            ("numpy.linalg" include nil nil [105 138])
            ("probeDefinitions" include nil nil [139 183])
            ("LookupTableGenerator" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [260 276])
                            ("self" variable nil (reparse-symbol indented_block_body) [320 336])
                            ("self" variable nil (reparse-symbol indented_block_body) [389 433])
                            ("self" variable nil (reparse-symbol indented_block_body) [443 496])
                            ("self" variable nil (reparse-symbol indented_block_body) [505 536])
                            ("self" code nil (reparse-symbol indented_block_body) [554 624])
                            ("self" code nil (reparse-symbol indented_block_body) [633 703]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [232 236])
                            ("pSeq" variable nil (reparse-symbol function_parameters) [238 242])
                            ("zSeq" variable nil (reparse-symbol function_parameters) [244 248]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [218 704])
                    ("CreateSyntheticLut" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [734 738])
                            ("multipole" variable nil (reparse-symbol function_parameters) [740 749]))                          
                        :documentation "
        Calculates the field table in cylindrical coordinates (z - along the needle, 
        p - around the needle )

        @param [in]  multipole a class multipole containing the positionf of 
                     the poles along the needle and the magnetization value
                     for each of the poles
        ")
                        (reparse-symbol indented_block_body) [710 1457])
                    ("Interpolate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1479 1483])
                            ("B" variable nil (reparse-symbol function_parameters) [1485 1486])
                            ("pIdx" variable nil (reparse-symbol function_parameters) [1488 1492])
                            ("zIdx" variable nil (reparse-symbol function_parameters) [1494 1498])
                            ("p" variable nil (reparse-symbol function_parameters) [1500 1501])
                            ("z" variable nil (reparse-symbol function_parameters) [1503 1504]))                          
                        :documentation "
        Apply bilinear interpolation
        
        @param B     [in] the field matrix on which to interpolate
        @param pIndx [in] the closer index in the matrix in the p axis
        @param zIdx  [in] the closer index in the matrix in the z axis
        @param p     [in] the value of p
        @param z     [in] the value of z

        @returns the interpolated field across the 4 closest points in the
                 matrix
        ")
                        (reparse-symbol indented_block_body) [1462 2548])
                    ("GetPIndex" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2568 2572])
                            ("values" variable nil (reparse-symbol function_parameters) [2574 2580]))                          
                        :documentation "
        Finds the index of the closest lower element in the sequence.
        The sequence is an ordered list of floats
        ")
                        (reparse-symbol indented_block_body) [2553 2893])
                    ("GetZIndex" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2914 2918])
                            ("values" variable nil (reparse-symbol function_parameters) [2920 2926]))                          
                        :documentation "
        Finds the index of the closest lower element in the sequence.
        The sequence is an ordered list of floats
        ")
                        (reparse-symbol indented_block_body) [2899 3239])
                    ("Lookup" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3265 3269])
                            ("p" variable nil (reparse-symbol function_parameters) [3271 3272])
                            ("z" variable nil (reparse-symbol function_parameters) [3274 3275]))                          
                        :documentation "
        Returns the value of field for a tip in p,z (cylindrical coordinates); input 
        assumes that the data is in the needle's coordinate system.

        @param [in] p The estimated position in the p (it can be an array of positions)
        @param [in] z The estimated postion in the Z (it can be an array of positions)

        @returns a duple containing the arrays of fields in P and Z. (interpolates
                 between the 4 nearest neighbors.
        ")
                        (reparse-symbol indented_block_body) [3253 4543]))                  
                :type "class")
                nil [186 4543]))          
      :file "LookupTableGenerator.py"
      :pointmax 4543
      :fsize 4542
      :lastmodtime '(21613 53506 842692 467000)
      :unmatched-syntax nil)
    (semanticdb-table "FieldEstimator.py"
      :major-mode 'python-mode
      :tags 
        '( ("scipy.optimize" include nil nil [1 35])
            ("numpy" include nil nil [36 101])
            ("numpy.linalg" include nil nil [102 133])
            ("FieldEstimator" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        The field estimator class.

        @param sensors [in] the sensor positions in the coordinate system
                            of the probe. This structure has independent
                            coorsdintates for the sX, sY, sY sensors in
                            each chip.
        @param lut     [in] field lookup table for the p&z components in 
                            cylindrical coordinates and in the needle 
                            coordinate system. p is perpendicular to the
                            needle,  z goes along the axis of
                            the needle and the tip is at the z=0 point.
        \"\"\"" code nil (reparse-symbol indented_block_body) [208 869])
                            ("self" variable nil (reparse-symbol indented_block_body) [879 901])
                            ("self" variable nil (reparse-symbol indented_block_body) [910 928]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [178 182])
                            ("sensors" variable nil (reparse-symbol function_parameters) [184 191])
                            ("lut" variable nil (reparse-symbol function_parameters) [193 196]))                          
                        :documentation "
        The field estimator class.

        @param sensors [in] the sensor positions in the coordinate system
                            of the probe. This structure has independent
                            coorsdintates for the sX, sY, sY sensors in
                            each chip.
        @param lut     [in] field lookup table for the p&z components in 
                            cylindrical coordinates and in the needle 
                            coordinate system. p is perpendicular to the
                            needle,  z goes along the axis of
                            the needle and the tip is at the z=0 point.
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [164 929])
                    ("TranslateToNewBase" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [959 963])
                            ("data" variable nil (reparse-symbol function_parameters) [965 969])
                            ("translation" variable nil (reparse-symbol function_parameters) [971 982])
                            ("rotMat" variable nil (reparse-symbol function_parameters) [984 990]))                          
                        :documentation "
        Transforms the array of (x,y,z) positions by applying a translation
        and a rotation passed as arguments.

        Returns an array of positions in the new coordinates base
        ")
                        (reparse-symbol indented_block_body) [935 1293])
                    ("FieldComparision" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1321 1325])
                            ("tip" variable nil (reparse-symbol function_parameters) [1327 1330])
                            ("phi" variable nil (reparse-symbol function_parameters) [1332 1335])
                            ("theta" variable nil (reparse-symbol function_parameters) [1337 1342])
                            ("mx" variable nil (reparse-symbol function_parameters) [1344 1346])
                            ("my" variable nil (reparse-symbol function_parameters) [1348 1350])
                            ("mz" variable nil (reparse-symbol function_parameters) [1352 1354])
                            ("eBx" variable nil (reparse-symbol function_parameters) [1356 1359])
                            ("eBy" variable nil (reparse-symbol function_parameters) [1361 1364])
                            ("eBz" variable nil (reparse-symbol function_parameters) [1366 1369]))                          
                        :documentation "
        Function to compare the measured B-field values to that 
        estimated by LUT at x,y,z
 
        Guesses from the nonlinear optimization are:
 
 	@param tip   [in] Translation of the tip positions in the coordinate 
                          frame of the probe in cartesian coordinates (x,y,z)
 	@param phi   [in] rotation of the probe around 'x' axis (radians)
        @param theta [in] rotation of the probe around 'y' axis (radians)
        @param mx    [in] sensor readings in X axis
        @param my    [in] sensor readings in Y axis
        @param mz    [in] sensor readings in Z axis

	@param eB    [in] Earths magnetic field in x,y,z 

        return None
        ")
                        (reparse-symbol indented_block_body) [1299 6544])
                    ("ResidualFunction" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6573 6577]))                          
                        :documentation "
        @param p0 [in] initial condition
        
        ")
                        (reparse-symbol indented_block_body) [6551 6714]))                  
                :type "class")
                nil [137 6714]))          
      :file "FieldEstimator.py"
      :pointmax 6719
      :fsize 6718
      :lastmodtime '(21613 5086 993404 364000)
      :unmatched-syntax nil)
    (semanticdb-table "run_model.py"
      :major-mode 'python-mode
      :tags 
        '( ("LookupTableGenerator" include nil nil [21 74])
            ("Multipole" include nil nil [75 117])
            ("probeDefinitions" include nil nil [118 166])
            ("SensorDataGenerator" include nil nil [167 219])
            ("FieldEstimator" include nil nil [220 267])
            ("matplotlib.pyplot" include nil nil [269 300])
            ("numpy" include nil nil [301 348])
            ("numpy" include nil nil [351 418])
            ("copy" include nil nil [420 431])
            ("if" code nil nil [444 3177]))          
      :file "run_model.py"
      :pointmax 3191
      :fsize 3190
      :lastmodtime '(21613 46975 6790 312000)
      :unmatched-syntax nil)
    (semanticdb-table "Quaternion.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [1 64])
            ("numpy.linalg" include nil nil [65 94])
            ("Quaternion" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [178 188])
                            ("self" variable nil (reparse-symbol indented_block_body) [197 207])
                            ("self" variable nil (reparse-symbol indented_block_body) [216 226])
                            ("self" variable nil (reparse-symbol indented_block_body) [235 245]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [133 137])
                            ("w" variable nil (reparse-symbol function_parameters) [139 140])
                            ("x" variable nil (reparse-symbol function_parameters) [144 145])
                            ("y" variable nil (reparse-symbol function_parameters) [149 150])
                            ("z" variable nil (reparse-symbol function_parameters) [154 155]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [119 246])
                    ("__mul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [264 268])
                            ("other" variable nil (reparse-symbol function_parameters) [270 275]))                          
                        :documentation "
        Non conmutative quaternion multiplication, returns a quaternion
        with the result of the quaternion multiplication.
        ")
                        (reparse-symbol indented_block_body) [251 784])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [802 806]))                          )
                        (reparse-symbol indented_block_body) [789 894])
                    ("Normalize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [914 918]))                          
                        :documentation "
        Normalizes the current quaternion.
        ")
                        (reparse-symbol indented_block_body) [899 1146])
                    ("RotationMatrix" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1171 1175]))                          
                        :documentation "
        Returns a 4x4 rotation matrix associated with the quaternion
        ")
                        (reparse-symbol indented_block_body) [1151 1863])
                    ("ConvertToEulerAngles" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1894 1898]))                          
                        :documentation "
        Converts the quaternion to the Euler angles

        - roll   ( rotation over X-axis )
        - pitch  ( rotation over Y-axis )
        - yaw    ( rotation over Z-axis )

        angle values are in radians
        ")
                        (reparse-symbol indented_block_body) [1868 2508]))                  
                :type "class")
                nil [96 2508])
            ("LocalRotation" function
               (:documentation "
    Creates a quatuernion with the local rotation.

    x,y,z unitary vector that specifies the axis around which 
          to perform the rotation.
    angle is the amount of rotation (in radians)
    "
                :arguments 
                  ( ("x" variable nil (reparse-symbol function_parameters) [2536 2537])
                    ("y" variable nil (reparse-symbol function_parameters) [2539 2540])
                    ("z" variable nil (reparse-symbol function_parameters) [2542 2543])
                    ("angle" variable nil (reparse-symbol function_parameters) [2545 2550]))                  )
                nil [2517 2952])
            ("GetRotationTo" function
               (:documentation "
    Returns the arc quatertion to rotate the orig vector to the destination
    vector.

    if orig and dest are parallel but with opposite signs we will rotate 180
    degrees around the fallback axis

    https://bitbucket.org/sinbad/ogre/src/9db75e3ba05c/OgreMain/include/OgreVector3.h#cl-651

    "
                :arguments 
                  ( ("orig" variable nil (reparse-symbol function_parameters) [3027 3031])
                    ("dest" variable nil (reparse-symbol function_parameters) [3033 3037])
                    ("fallbackAxis" variable nil (reparse-symbol function_parameters) [3039 3051]))                  )
                nil [3008 4066]))          
      :file "Quaternion.py"
      :pointmax 4085
      :fsize 4084
      :lastmodtime '(21612 39968 790364 385000)
      :unmatched-syntax nil)
    (semanticdb-table "TrigMath.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [1 40])
            ("FromUnaryVectorToPhiTheta" function
               (:documentation "
    Return the angles for a unary vector in radians

    phi   is the rotation over x Axis
    theta is the rotation over y Axis
    "
                :arguments 
                  ( ("u" variable nil (reparse-symbol function_parameters) [73 74]))                  )
                nil [42 368]))          
      :file "TrigMath.py"
      :pointmax 225
      :fsize 369
      :lastmodtime '(21610 1074 699803 70000)
      :unmatched-syntax nil)
    (semanticdb-table "rotations.py"
      :major-mode 'python-mode
      :tags 
        '( ("pylab" include nil nil [21 40])
            ("Quaternion" include nil nil [42 66])
            ("if" code nil nil [69 1530]))          
      :file "rotations.py"
      :pointmax 1530
      :fsize 1529
      :lastmodtime '(21611 29980 272614 94000)
      :unmatched-syntax nil))
  :file "!sandbox!workspace!longNeedles!Modelling!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
