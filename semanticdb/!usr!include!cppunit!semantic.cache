;; Object cppunit/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "cppunit/"
  :tables
  (list
    (semanticdb-table "CompilerOutputter.h"
      :major-mode 'c-mode
      :tags 
        '( ("CPPUNIT_COMPILERTESTRESULTOUTPUTTER_H" variable (:constant-flag t) nil [55 92])
            ("cppunit/Portability.h" include (:system-flag t) nil [94 126])
            ("cppunit/Outputter.h" include (:system-flag t) nil [127 157])
            ("cppunit/portability/Stream.h" include (:system-flag t) nil [158 197])
            ("Exception" type
               (:prototype t
                :type "class")
                nil [218 234])
            ("SourceLine" type
               (:prototype t
                :type "class")
                nil [235 252])
            ("Test" type
               (:prototype t
                :type "class")
                nil [253 264])
            ("TestFailure" type
               (:prototype t
                :type "class")
                nil [265 283])
            ("TestResultCollector" type
               (:prototype t
                :type "class")
                nil [284 310])
            ("Outputter" variable (:type "int") nil [1928 5249]))          
      :file "CompilerOutputter.h"
      :pointmax 5318
      :fsize 5317
      :lastmodtime '(17572 12805 0 0)
      :unmatched-syntax '((symbol 5252 . 5266) (PUBLIC 1921 . 1927) (punctuation 1919 . 1920) (symbol 1901 . 1918) (symbol 1889 . 1900) (CLASS 1883 . 1888) (symbol 199 . 215))
      :lexical-table 
        '(("CPPUNIT_COMPILERTESTRESULTOUTPUTTER_H")
          )
)
    (semanticdb-table "TestCaller.h"
      :major-mode 'c++-mode
      :tags 
        '( ("CPPUNIT_TESTCALLER_H" variable (:constant-flag t) nil [56 76])
            ("cppunit/Exception.h" include (:system-flag t) nil [78 108])
            ("cppunit/TestCase.h" include (:system-flag t) nil [109 138])
            ("TestCaller" type
               (:template 
                  ( ("Fixture" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [2639 2646])
                    ("TestCaller" function
                       (:constructor-flag t
                        :arguments 
                          ( ("name" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2887 2904])
                            ("test" variable (:type ("TestMethod" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2905 2922]))                          
                        :type ("TestCaller" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2875 3036])
                    ("TestCaller" function
                       (:constructor-flag t
                        :arguments 
                          ( ("name" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3424 3441])
                            ("test" variable (:type ("TestMethod" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3442 3458])
                            ("fixture" variable
                               (:reference 1
                                :type ("Fixture" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3459 3476]))                          
                        :type ("TestCaller" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3413 3586])
                    ("TestCaller" function
                       (:constructor-flag t
                        :arguments 
                          ( ("name" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4006 4023])
                            ("test" variable (:type ("TestMethod" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4024 4040])
                            ("fixture" variable
                               (:pointer 1
                                :type ("Fixture" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4041 4058]))                          
                        :type ("TestCaller" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3995 4166])
                    ("TestCaller" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [4174 4242])
                    ("runTest" function (:type "void") (reparse-symbol classsubparts) [4246 4446])
                    ("setUp" function (:type "void") (reparse-symbol classsubparts) [4452 4498])
                    ("tearDown" function (:type "void") (reparse-symbol classsubparts) [4502 4554])
                    ("toString" function (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4558 4633])
                    ("private" label nil (reparse-symbol classsubparts) [4635 4643])
                    ("TestCaller" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TestCaller" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4659 4684]))                          
                        :type ("TestCaller" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4647 4685])
                    ("=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TestCaller" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4713 4738]))                          
                        :type ("TestCaller" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4689 4739])
                    ("private" label nil (reparse-symbol classsubparts) [4741 4749])
                    ("m_ownFixture" variable (:type "bool") (reparse-symbol classsubparts) [4752 4770])
                    ("m_fixture" variable
                       (:pointer 1
                        :type ("Fixture" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4773 4792])
                    ("m_test" variable (:type ("TestMethod" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4795 4813]))                  
                :superclasses 
                  ( ("TestCase" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [2530 4816]))          
      :file "TestCaller.h"
      :pointmax 4867
      :fsize 4866
      :lastmodtime '(15691 64296 0 0)
      :unmatched-syntax '((symbol 4820 . 4834) (punctuation 2632 . 2633) (semantic-list 2630 . 2632) (semantic-list 2608 . 2630) (VOID 2603 . 2607) (TYPEDEF 2595 . 2602) (symbol 229 . 245))
      :lexical-table 
        '(("CPPUNIT_TESTCALLER_H")
          )
)
    (semanticdb-table "TestSuite.h"
      :major-mode 'c++-mode
      :tags 
        '( ("CPPUNIT_TESTSUITE_H" variable (:constant-flag t) nil [55 74])
            ("cppunit/Portability.h" include (:system-flag t) nil [76 108])
            ("cppunit/TestComposite.h" include (:system-flag t) nil [268 302])
            ("cppunit/portability/CppUnitVector.h" include (:system-flag t) nil [303 349])
            ("TestComposite" variable (:type "int") nil [1113 1891]))          
      :file "TestSuite.h"
      :pointmax 1997
      :fsize 1996
      :lastmodtime '(17103 32759 0 0)
      :unmatched-syntax '((symbol 1894 . 1908) (PUBLIC 1106 . 1112) (punctuation 1104 . 1105) (symbol 1094 . 1103) (symbol 1082 . 1093) (CLASS 1076 . 1081) (symbol 351 . 367))
      :lexical-table 
        '(("CPPUNIT_TESTSUITE_H")
          )
)
    (semanticdb-table "Exception.h"
      :major-mode 'c-mode
      :tags 
        '( ("CPPUNIT_EXCEPTION_H" variable (:constant-flag t) nil [37 56])
            ("cppunit/Portability.h" include (:system-flag t) nil [58 90])
            ("cppunit/Message.h" include (:system-flag t) nil [91 119])
            ("cppunit/SourceLine.h" include (:system-flag t) nil [120 151])
            ("exception" include (:system-flag t) nil [152 172])
            ("std::exception" variable (:type "int") nil [419 2111]))          
      :file "Exception.h"
      :pointmax 2162
      :fsize 2161
      :lastmodtime '(15726 30091 0 0)
      :unmatched-syntax '((symbol 2114 . 2128) (PUBLIC 412 . 418) (punctuation 410 . 411) (symbol 400 . 409) (symbol 388 . 399) (CLASS 382 . 387) (symbol 175 . 191))
      :lexical-table 
        '(("CPPUNIT_EXCEPTION_H")
          )
)
    (semanticdb-table "TestCase.h"
      :major-mode 'c-mode
      :tags 
        '( ("CPPUNIT_TESTCASE_H" variable (:constant-flag t) nil [36 54])
            ("cppunit/Portability.h" include (:system-flag t) nil [56 88])
            ("cppunit/TestLeaf.h" include (:system-flag t) nil [89 118])
            ("cppunit/TestAssert.h" include (:system-flag t) nil [119 150])
            ("cppunit/TestFixture.h" include (:system-flag t) nil [151 183])
            ("string" include (:system-flag t) nil [184 201])
            ("TestResult" type
               (:prototype t
                :type "class")
                nil [223 240])
            ("TestFixture" variable (:type "int") nil [664 1077]))          
      :file "TestCase.h"
      :pointmax 1125
      :fsize 1124
      :lastmodtime '(15691 64296 0 0)
      :unmatched-syntax '((symbol 1079 . 1093) (PUBLIC 657 . 663) (punctuation 626 . 627) (symbol 618 . 626) (PUBLIC 611 . 617) (punctuation 609 . 610) (symbol 600 . 608) (symbol 588 . 599) (CLASS 582 . 587) (symbol 204 . 220))
      :lexical-table 
        '(("CPPUNIT_TESTCASE_H")
          )
)
    (semanticdb-table "Portability.h"
      :major-mode 'c-mode
      :tags 
        '( ("CPPUNIT_PORTABILITY_H" variable (:constant-flag t) nil [39 60])
            ("cppunit/config-auto.h" include (:system-flag t) nil [423 459])
            ("CPPUNIT_VERSION" variable (:constant-flag t) nil [530 545])
            ("cppunit/config/CppUnitApi.h" include (:system-flag t) nil [565 603])
            ("cppunit/config/SelectDllLoader.h" include (:system-flag t) nil [653 696])
            ("CPPUNIT_ENABLE_NAKED_ASSERT" variable (:constant-flag t) nil [1000 1027])
            ("CPPUNIT_ENABLE_CU_TEST_MACROS" variable (:constant-flag t) nil [1181 1210])
            ("CPPUNIT_HAVE_CPP_SOURCE_ANNOTATION" variable (:constant-flag t) nil [1435 1469])
            ("CPPUNIT_NO_NAMESPACE" variable (:constant-flag t) nil [1668 1688])
            ("CPPUNIT_NO_STD_NAMESPACE" variable (:constant-flag t) nil [1783 1807])
            ("CPPUNIT_COMPILER_LOCATION_FORMAT" variable (:constant-flag t) nil [2842 2874])
            ("CPPUNIT_CONST_CAST" variable (:constant-flag t) nil [3283 3301])
            ("CPPUNIT_STATIC_CAST" variable (:constant-flag t) nil [3366 3385])
            ("std" variable (:constant-flag t) nil [3656 3659])
            ("CPPUNIT_NS_BEGIN" variable (:constant-flag t) nil [3882 3898])
            ("CPPUNIT_NS_END" variable (:constant-flag t) nil [3908 3922])
            ("CPPUNIT_NS" variable (:constant-flag t) nil [3932 3942])
            ("CPPUNIT_STRINGIZE" variable (:constant-flag t) nil [4406 4423])
            ("_CPPUNIT_DO_STRINGIZE" variable (:constant-flag t) nil [4489 4510])
            ("CPPUNIT_JOIN" variable (:constant-flag t) nil [5188 5200])
            ("_CPPUNIT_DO_JOIN" variable (:constant-flag t) nil [5281 5297])
            ("_CPPUNIT_DO_JOIN2" variable (:constant-flag t) nil [5379 5396])
            ("CPPUNIT_MAKE_UNIQUE_NAME" variable (:constant-flag t) nil [5672 5696])
            ("CPPUNIT_WRAP_COLUMN" variable (:constant-flag t) nil [5852 5871]))          
      :file "Portability.h"
      :pointmax 5915
      :fsize 5914
      :lastmodtime '(17572 16898 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("CPPUNIT_VERSION" . ((string "\"1.12.0\"" 547 . 555)))
          ("CPPUNIT_NO_STD_NAMESPACE" . ((number "1" 1808 . 1809)))
          ("CPPUNIT_NS")
          ("_CPPUNIT_DO_JOIN" (spp-arg-list ("symbol1" "symbol2") 5297 . 5317) . ((symbol "_CPPUNIT_DO_JOIN2" 5318 . 5335) (semantic-list "( symbol1, symbol2 )" 5335 . 5355)))
          ("std")
          ("CPPUNIT_WRAP_COLUMN" . ((number "79" 5872 . 5874)))
          ("CPPUNIT_ENABLE_NAKED_ASSERT" . ((number "0" 1037 . 1038)))
          ("CPPUNIT_NO_NAMESPACE" . ((number "1" 1689 . 1690)))
          ("CPPUNIT_NS_END")
          ("_CPPUNIT_DO_STRINGIZE" (spp-arg-list ("symbol") 4510 . 4520) . ((punctuation "#" 4521 . 4522) (symbol "symbol" 4522 . 4528)))
          ("_CPPUNIT_DO_JOIN2" (spp-arg-list ("symbol1" "symbol2") 5396 . 5416) . ((spp-symbol-merge ((symbol "symbol1" 5417 . 5424) (symbol "symbol2" 5426 . 5433)) 5417 . 5433)))
          ("CPPUNIT_ENABLE_CU_TEST_MACROS" . ((number "0" 1218 . 1219)))
          ("CPPUNIT_STATIC_CAST" (spp-arg-list ("TargetType" "pointer") 3385 . 3408) . ((semantic-list "((TargetType)( pointer ))" 3415 . 3440)))
          ("CPPUNIT_STRINGIZE" (spp-arg-list ("symbol") 4423 . 4433) . ((symbol "_CPPUNIT_DO_STRINGIZE" 4434 . 4455) (semantic-list "( symbol )" 4455 . 4465)))
          ("CPPUNIT_MAKE_UNIQUE_NAME" (spp-arg-list ("prefix") 5696 . 5706) . ((symbol "CPPUNIT_JOIN" 5707 . 5719) (semantic-list "( prefix, __LINE__ )" 5719 . 5739)))
          ("CPPUNIT_CONST_CAST" (spp-arg-list ("TargetType" "pointer") 3301 . 3324) . ((semantic-list "((TargetType)( pointer ))" 3331 . 3356)))
          ("CPPUNIT_HAVE_CPP_SOURCE_ANNOTATION" . ((number "1" 1472 . 1473)))
          ("CPPUNIT_NS_BEGIN")
          ("CPPUNIT_PORTABILITY_H")
          ("CPPUNIT_JOIN" (spp-arg-list ("symbol1" "symbol2") 5200 . 5220) . ((symbol "_CPPUNIT_DO_JOIN" 5221 . 5237) (semantic-list "( symbol1, symbol2 )" 5237 . 5257)))
          ("CPPUNIT_COMPILER_LOCATION_FORMAT" . ((string "\"%f:%l:\"" 2875 . 2883)))
          )
)
    (semanticdb-table "TestComposite.h"
      :major-mode 'c++-mode
      :tags 
        '( ("CPPUNIT_TESTCOMPSITE_H" variable (:constant-flag t) nil [58 80])
            ("cppunit/Test.h" include (:system-flag t) nil [82 107])
            ("string" include (:system-flag t) nil [108 125])
            ("Test" variable (:type "int") nil [363 872]))          
      :file "TestComposite.h"
      :pointmax 924
      :fsize 923
      :lastmodtime '(15662 28765 0 0)
      :unmatched-syntax '((symbol 875 . 889) (PUBLIC 356 . 362) (punctuation 354 . 355) (symbol 340 . 353) (symbol 328 . 339) (CLASS 322 . 327) (symbol 127 . 143))
      :lexical-table 
        '(("CPPUNIT_TESTCOMPSITE_H")
          )
)
    (semanticdb-table "Message.h"
      :major-mode 'c-mode
      :tags 
        '( ("CPPUNIT_MESSAGE_H" variable (:constant-flag t) nil [35 52])
            ("cppunit/Portability.h" include (:system-flag t) nil [54 86])
            ("cppunit/portability/CppUnitDeque.h" include (:system-flag t) nil [246 291])
            ("string" include (:system-flag t) nil [292 309])
            ("Message" variable (:type ("CPPUNIT_API" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [1194 4661]))          
      :file "Message.h"
      :pointmax 4767
      :fsize 4766
      :lastmodtime '(20764 28359 0 0)
      :unmatched-syntax '((symbol 4664 . 4678) (symbol 312 . 328))
      :lexical-table 
        '(("CPPUNIT_MESSAGE_H")
          )
)
    (semanticdb-table "SourceLine.h"
      :major-mode 'c-mode
      :tags 
        '( ("CPPUNIT_SOURCELINE_H" variable (:constant-flag t) nil [38 58])
            ("cppunit/Portability.h" include (:system-flag t) nil [60 92])
            ("string" include (:system-flag t) nil [93 110])
            ("CPPUNIT_SOURCELINE" variable (:constant-flag t) nil [374 392])
            ("SourceLine" variable (:type ("CPPUNIT_API" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [811 1393]))          
      :file "SourceLine.h"
      :pointmax 1444
      :fsize 1443
      :lastmodtime '(16798 20716 0 0)
      :unmatched-syntax '((symbol 1396 . 1410) (symbol 442 . 458))
      :lexical-table 
        '(("CPPUNIT_SOURCELINE_H")
          ("CPPUNIT_SOURCELINE" (spp-arg-list nil 392 . 394) . 
              ((symbol "CPPUNIT_NS" 395 . 405) (punctuation ":" 405 . 406) (punctuation ":" 406 . 407) (symbol "SourceLine" 407 . 417) (semantic-list "( __FILE__, __LINE__ )" 417 . 439)))
          )
)
    (semanticdb-table "TestLeaf.h"
      :major-mode 'c-mode
      :tags 
        '( ("CPPUNIT_TESTLEAF_H" variable (:constant-flag t) nil [36 54])
            ("cppunit/Test.h" include (:system-flag t) nil [56 81])
            ("Test" variable (:type "int") nil [256 875]))          
      :file "TestLeaf.h"
      :pointmax 922
      :fsize 921
      :lastmodtime '(15662 28765 0 0)
      :unmatched-syntax '((symbol 877 . 891) (PUBLIC 249 . 255) (punctuation 247 . 248) (symbol 239 . 247) (symbol 227 . 238) (CLASS 221 . 226) (symbol 84 . 100))
      :lexical-table 
        '(("CPPUNIT_TESTLEAF_H")
          )
)
    (semanticdb-table "TestAssert.h"
      :major-mode 'c-mode
      :tags 
        '( ("CPPUNIT_TESTASSERT_H" variable (:constant-flag t) nil [38 58])
            ("cppunit/Portability.h" include (:system-flag t) nil [60 92])
            ("cppunit/Exception.h" include (:system-flag t) nil [93 123])
            ("cppunit/Asserter.h" include (:system-flag t) nil [124 153])
            ("cppunit/portability/Stream.h" include (:system-flag t) nil [154 193])
            ("stdio.h" include (:system-flag t) nil [194 212])
            ("float.h" include (:system-flag t) nil [213 231])
            ("assertion_traits" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("equal" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [952 963])
                            ("y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [964 976]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [933 1011])
                    ("toString" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1046 1058]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1017 1141]))                  )
                nil [881 1144])
            ("assertion_traits" type
               (:type "struct"
                :members 
                  ( ("equal" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("x" variable (:type "double") (reparse-symbol arg-sub-list) [1627 1636])
                            ("y" variable (:type "double") (reparse-symbol arg-sub-list) [1637 1647]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [1608 1682])
                    ("toString" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("x" variable (:type "double") (reparse-symbol arg-sub-list) [1717 1727]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1688 2121]))                  
                :template-specifier 
                  ( ("double" type nil nil nil))                  )
                nil [1556 2124])
            ("assertEquals" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("expected" variable
                       (:reference 1
                        :constant-flag t
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2356 2374])
                    ("actual" variable
                       (:reference 1
                        :constant-flag t
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2394 2410])
                    ("sourceLine" variable (:type ("SourceLine" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2430 2452])
                    ("message" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2472 2500]))                  )
                nil [2318 2812])
            ("assertDoubleEquals" function
               (:prototype-flag t
                :arguments 
                  ( ("expected" variable (:type "double") (reparse-symbol arg-sub-list) [3109 3125])
                    ("actual" variable (:type "double") (reparse-symbol arg-sub-list) [3163 3177])
                    ("delta" variable (:type "double") (reparse-symbol arg-sub-list) [3215 3228])
                    ("sourceLine" variable (:type ("SourceLine" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3266 3288])
                    ("message" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3327 3355]))                  
                :type ("CPPUNIT_API" type (:type "class") nil nil))
                nil [3077 3356])
            ("CPPUNIT_ASSERT" variable (:constant-flag t) nil [4058 4072])
            ("CPPUNIT_ASSERT_MESSAGE" variable (:constant-flag t) nil [4642 4664])
            ("CPPUNIT_FAIL" variable (:constant-flag t) nil [5279 5291])
            ("CPPUNIT_ASSERT_EQUAL" variable (:constant-flag t) nil [6486 6506])
            ("CPPUNIT_ASSERT_EQUAL_MESSAGE" variable (:constant-flag t) nil [7482 7510])
            ("CPPUNIT_ASSERT_DOUBLES_EQUAL" variable (:constant-flag t) nil [8181 8209])
            ("CPPUNIT_ASSERT_DOUBLES_EQUAL_MESSAGE" variable (:constant-flag t) nil [8756 8792])
            ("CPPUNIT_ASSERT_THROW" variable (:constant-flag t) nil [9367 9387])
            ("CPPUNIT_EXTRACT_EXCEPTION_TYPE_" variable (:constant-flag t) nil [9837 9868])
            ("CPPUNIT_GET_PARAMETER_STRING" variable (:constant-flag t) nil [10005 10033])
            ("CPPUNIT_ASSERT_THROW_MESSAGE" variable (:constant-flag t) nil [10392 10420])
            ("CPPUNIT_ASSERT_NO_THROW" variable (:constant-flag t) nil [12724 12747])
            ("CPPUNIT_ASSERT_NO_THROW_MESSAGE" variable (:constant-flag t) nil [13238 13269])
            ("CPPUNIT_ASSERT_ASSERTION_FAIL" variable (:constant-flag t) nil [14977 15006])
            ("CPPUNIT_ASSERT_ASSERTION_FAIL_MESSAGE" variable (:constant-flag t) nil [15374 15411])
            ("CPPUNIT_ASSERT_ASSERTION_PASS" variable (:constant-flag t) nil [15723 15752])
            ("CPPUNIT_ASSERT_ASSERTION_PASS_MESSAGE" variable (:constant-flag t) nil [16103 16140]))          
      :file "TestAssert.h"
      :pointmax 16604
      :fsize 16603
      :lastmodtime '(17888 47470 0 0)
      :unmatched-syntax '((symbol 16556 . 16570) (VOID 3072 . 3076) (symbol 273 . 289))
      :lexical-table 
        '(("CPPUNIT_ASSERT_MESSAGE" (spp-arg-list ("message" "condition") 4664 . 4683) . ((semantic-list "( CPPUNIT_NS::Asserter::failIf( !(condition),                            \\
                                  CPPUNIT_NS::Message( \"assertion failed\", \\
                                                       \"Expression: \"      \\
                                                       #condition,         \\
                                                       message ),          \\
                                  CPPUNIT_SOURCELINE() ) )" 4713 . 5154)))
          ("CPPUNIT_ASSERT_THROW" (spp-arg-list ("expression" "ExceptionType") 9387 . 9416) . ((symbol "CPPUNIT_ASSERT_THROW_MESSAGE" 9435 . 9463) (semantic-list "( CPPUNIT_NS::AdditionalMessage(),       \\
                                 expression,                            \\
                                 ExceptionType )" 9463 . 9628)))
          ("CPPUNIT_EXTRACT_EXCEPTION_TYPE_" (spp-arg-list ("exception" "no_rtti_message") 9868 . 9898) . 
              ((symbol "std" 9904 . 9907) (punctuation ":" 9907 . 9908) (punctuation ":" 9908 . 9909) (symbol "string" 9909 . 9915) (semantic-list "( no_rtti_message )" 9915 . 9934)))
          ("CPPUNIT_ASSERT_NO_THROW" (spp-arg-list ("expression") 12747 . 12761) . ((symbol "CPPUNIT_ASSERT_NO_THROW_MESSAGE" 12795 . 12826) (semantic-list "( CPPUNIT_NS::AdditionalMessage(),       \\
                                    expression )" 12826 . 12917)))
          ("CPPUNIT_ASSERT_NO_THROW_MESSAGE" (spp-arg-list ("message" "expression") 13269 . 13292) . 
              ((DO "do" 13312 . 13314) (semantic-list "{                                                                       \\
      CPPUNIT_NS::Message cpputMsg_( \"unexpected exception caught\" );         \\
      cpputMsg_.addDetail( message );                                         \\
                                                                              \\
      try {                                                                   \\
         expression;                                                          \\
      } catch ( const std::exception &e ) {                                   \\
         cpputMsg_.addDetail( \"Caught: \" +                                    \\
                              CPPUNIT_EXTRACT_EXCEPTION_TYPE_( e,             \\
                                          \"std::exception or derived\" ) );    \\
         cpputMsg_.addDetail( std::string(\"What(): \") + e.what() );           \\
         CPPUNIT_NS::Asserter::fail( cpputMsg_,                               \\
                                     CPPUNIT_SOURCELINE() );                  \\
      } catch ( ... ) {                                                       \\
         cpputMsg_.addDetail( \"Caught: unknown.\" );                           \\
         CPPUNIT_NS::Asserter::fail( cpputMsg_,                               \\
                                     CPPUNIT_SOURCELINE() );                  \\
      }                                                                       \\
   }" 13315 . 14753) (WHILE "while" 14754 . 14759) (semantic-list "( false )" 14760 . 14769)))
          ("CPPUNIT_ASSERT_ASSERTION_FAIL_MESSAGE" (spp-arg-list ("message" "assertion") 15411 . 15433) . ((symbol "CPPUNIT_ASSERT_THROW_MESSAGE" 15442 . 15470) (semantic-list "( message, assertion, CPPUNIT_NS::Exception )" 15470 . 15515)))
          ("CPPUNIT_ASSERT_DOUBLES_EQUAL" (spp-arg-list ("expected" "actual" "delta") 8209 . 8232) . ((semantic-list "( CPPUNIT_NS::assertDoubleEquals( (expected),            \\
                                    (actual),              \\
                                    (delta),               \\
                                    CPPUNIT_SOURCELINE(),  \\
                                    \"\" ) )" 8244 . 8528)))
          ("CPPUNIT_TESTASSERT_H")
          ("CPPUNIT_ASSERT_EQUAL" (spp-arg-list ("expected" "actual") 6506 . 6523) . ((semantic-list "( CPPUNIT_NS::assertEquals( (expected),              \\
                              (actual),                \\
                              CPPUNIT_SOURCELINE(),    \\
                              \"\" ) )" 6537 . 6742)))
          ("CPPUNIT_ASSERT_ASSERTION_FAIL" (spp-arg-list ("assertion") 15006 . 15019) . ((symbol "CPPUNIT_ASSERT_THROW" 15041 . 15061) (semantic-list "( assertion, CPPUNIT_NS::Exception )" 15061 . 15097)))
          ("CPPUNIT_ASSERT_THROW_MESSAGE" (spp-arg-list ("message" "expression" "ExceptionType") 10420 . 10458) . 
              ((DO "do" 10466 . 10468) (semantic-list "{                                                                       \\
      bool cpputCorrectExceptionThrown_ = false;                              \\
      CPPUNIT_NS::Message cpputMsg_( \"expected exception not thrown\" );       \\
      cpputMsg_.addDetail( message );                                         \\
      cpputMsg_.addDetail( \"Expected: \"                                       \\
                           CPPUNIT_GET_PARAMETER_STRING( ExceptionType ) );   \\
                                                                              \\
      try {                                                                   \\
         expression;                                                          \\
      } catch ( const ExceptionType & ) {                                     \\
         cpputCorrectExceptionThrown_ = true;                                 \\
      } catch ( const std::exception &e) {                                    \\
         cpputMsg_.addDetail( \"Actual  : \" +                                  \\
                              CPPUNIT_EXTRACT_EXCEPTION_TYPE_( e,             \\
                                          \"std::exception or derived\") );     \\
         cpputMsg_.addDetail( std::string(\"What()  : \") + e.what() );         \\
      } catch ( ... ) {                                                       \\
         cpputMsg_.addDetail( \"Actual  : unknown.\");                          \\
      }                                                                       \\
                                                                              \\
      if ( cpputCorrectExceptionThrown_ )                                     \\
         break;                                                               \\
                                                                              \\
      CPPUNIT_NS::Asserter::fail( cpputMsg_,                                  \\
                                  CPPUNIT_SOURCELINE() );                     \\
   }" 10469 . 12467) (WHILE "while" 12468 . 12473) (semantic-list "( false )" 12474 . 12483)))
          ("CPPUNIT_ASSERT" (spp-arg-list ("condition") 4072 . 4083) . ((semantic-list "( CPPUNIT_NS::Asserter::failIf( !(condition),                              \\
                                  CPPUNIT_NS::Message( \"assertion failed\" ), \\
                                  CPPUNIT_SOURCELINE() ) )" 4131 . 4345)))
          ("CPPUNIT_ASSERT_EQUAL_MESSAGE" (spp-arg-list ("message" "expected" "actual") 7510 . 7535) . ((semantic-list "( CPPUNIT_NS::assertEquals( (expected),              \\
                              (actual),                \\
                              CPPUNIT_SOURCELINE(),    \\
                              (message) ) )" 7545 . 7757)))
          ("CPPUNIT_FAIL" (spp-arg-list ("message") 5291 . 5302) . ((semantic-list "( CPPUNIT_NS::Asserter::fail( CPPUNIT_NS::Message( \"forced failure\",  \\
                                                     message ),         \\
                                CPPUNIT_SOURCELINE() ) )" 5347 . 5549)))
          ("CPPUNIT_GET_PARAMETER_STRING" (spp-arg-list ("parameter") 10033 . 10046) . ((punctuation "#" 10047 . 10048) (symbol "parameter" 10048 . 10057)))
          ("CPPUNIT_ASSERT_DOUBLES_EQUAL_MESSAGE" (spp-arg-list ("message" "expected" "actual" "delta") 8792 . 8823) . ((semantic-list "( CPPUNIT_NS::assertDoubleEquals( (expected),            \\
                                    (actual),              \\
                                    (delta),               \\
                                    CPPUNIT_SOURCELINE(),  \\
                                    (message) ) )" 8829 . 9120)))
          ("CPPUNIT_ASSERT_ASSERTION_PASS_MESSAGE" (spp-arg-list ("message" "assertion") 16140 . 16162) . ((symbol "CPPUNIT_ASSERT_NO_THROW_MESSAGE" 16171 . 16202) (semantic-list "( message, assertion )" 16202 . 16224)))
          ("CPPUNIT_ASSERT_ASSERTION_PASS" (spp-arg-list ("assertion") 15752 . 15765) . ((symbol "CPPUNIT_ASSERT_NO_THROW" 15787 . 15810) (semantic-list "( assertion )" 15810 . 15823)))
          )
)
    (semanticdb-table "TestFixture.h"
      :major-mode 'c++-mode
      :tags 
        '( ("CPPUNIT_TESTFIXTURE_H" variable (:constant-flag t) nil [57 78])
            ("cppunit/Portability.h" include (:system-flag t) nil [80 112])
            ("TestFixture" variable (:type ("CPPUNIT_API" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [2419 2635]))          
      :file "TestFixture.h"
      :pointmax 2662
      :fsize 2661
      :lastmodtime '(15662 28765 0 0)
      :unmatched-syntax '((symbol 2638 . 2652) (symbol 114 . 130))
      :lexical-table 
        '(("CPPUNIT_TESTFIXTURE_H")
          )
)
    (semanticdb-table "config-auto.h"
      :major-mode 'c-mode
      :tags 
        '( ("_INCLUDE_CPPUNIT_CONFIG_AUTO_H" variable (:constant-flag t) nil [48 78])
            ("CPPUNIT_HAVE_CLASS_STRSTREAM" variable (:constant-flag t) nil [514 542])
            ("CPPUNIT_HAVE_CMATH" variable (:constant-flag t) nil [646 664])
            ("CPPUNIT_HAVE_DLERROR" variable (:constant-flag t) nil [846 866])
            ("CPPUNIT_HAVE_DLFCN_H" variable (:constant-flag t) nil [974 994])
            ("CPPUNIT_HAVE_FINITE" variable (:constant-flag t) nil [1097 1116])
            ("CPPUNIT_HAVE_INTTYPES_H" variable (:constant-flag t) nil [1340 1363])
            ("CPPUNIT_HAVE_ISFINITE" variable (:constant-flag t) nil [1453 1474])
            ("CPPUNIT_HAVE_LIBDL" variable (:constant-flag t) nil [1581 1599])
            ("CPPUNIT_HAVE_MEMORY_H" variable (:constant-flag t) nil [1709 1730])
            ("CPPUNIT_HAVE_NAMESPACES" variable (:constant-flag t) nil [1840 1863])
            ("CPPUNIT_HAVE_RTTI" variable (:constant-flag t) nil [1978 1995])
            ("CPPUNIT_HAVE_SSTREAM" variable (:constant-flag t) nil [2176 2196])
            ("CPPUNIT_HAVE_STDINT_H" variable (:constant-flag t) nil [2306 2327])
            ("CPPUNIT_HAVE_STDLIB_H" variable (:constant-flag t) nil [2437 2458])
            ("CPPUNIT_HAVE_STRINGS_H" variable (:constant-flag t) nil [2570 2592])
            ("CPPUNIT_HAVE_STRING_H" variable (:constant-flag t) nil [2702 2723])
            ("CPPUNIT_HAVE_STRSTREAM" variable (:constant-flag t) nil [2835 2857])
            ("CPPUNIT_HAVE_SYS_STAT_H" variable (:constant-flag t) nil [2971 2994])
            ("CPPUNIT_HAVE_SYS_TYPES_H" variable (:constant-flag t) nil [3110 3134])
            ("CPPUNIT_HAVE_UNISTD_H" variable (:constant-flag t) nil [3244 3265])
            ("CPPUNIT_PACKAGE" variable (:constant-flag t) nil [3333 3348])
            ("CPPUNIT_PACKAGE_BUGREPORT" variable (:constant-flag t) nil [3491 3516])
            ("CPPUNIT_PACKAGE_NAME" variable (:constant-flag t) nil [3615 3635])
            ("CPPUNIT_PACKAGE_STRING" variable (:constant-flag t) nil [3748 3770])
            ("CPPUNIT_PACKAGE_TARNAME" variable (:constant-flag t) nil [3884 3907])
            ("CPPUNIT_PACKAGE_VERSION" variable (:constant-flag t) nil [4007 4030])
            ("CPPUNIT_STDC_HEADERS" variable (:constant-flag t) nil [4137 4157])
            ("CPPUNIT_USE_TYPEINFO_NAME" variable (:constant-flag t) nil [4272 4297])
            ("CPPUNIT_VERSION" variable (:constant-flag t) nil [4391 4406]))          
      :file "config-auto.h"
      :pointmax 4471
      :fsize 4470
      :lastmodtime '(20764 28366 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("CPPUNIT_HAVE_STRING_H" . ((number "1" 2725 . 2726)))
          ("CPPUNIT_STDC_HEADERS" . ((number "1" 4159 . 4160)))
          ("CPPUNIT_VERSION" . ((string "\"1.12.1\"" 4408 . 4416)))
          ("CPPUNIT_HAVE_NAMESPACES" . ((number "1" 1865 . 1866)))
          ("CPPUNIT_HAVE_INTTYPES_H" . ((number "1" 1365 . 1366)))
          ("CPPUNIT_HAVE_MEMORY_H" . ((number "1" 1732 . 1733)))
          ("CPPUNIT_HAVE_STDLIB_H" . ((number "1" 2460 . 2461)))
          ("CPPUNIT_HAVE_CMATH" . ((number "1" 666 . 667)))
          ("CPPUNIT_HAVE_STDINT_H" . ((number "1" 2329 . 2330)))
          ("CPPUNIT_HAVE_STRSTREAM" . ((number "1" 2859 . 2860)))
          ("CPPUNIT_HAVE_SYS_STAT_H" . ((number "1" 2996 . 2997)))
          ("CPPUNIT_PACKAGE_TARNAME" . ((string "\"\"" 3909 . 3911)))
          ("CPPUNIT_PACKAGE_VERSION" . ((string "\"\"" 4032 . 4034)))
          ("CPPUNIT_HAVE_LIBDL" . ((number "1" 1601 . 1602)))
          ("CPPUNIT_HAVE_RTTI" . ((number "1" 1997 . 1998)))
          ("CPPUNIT_HAVE_SSTREAM" . ((number "1" 2198 . 2199)))
          ("CPPUNIT_HAVE_STRINGS_H" . ((number "1" 2594 . 2595)))
          ("CPPUNIT_HAVE_CLASS_STRSTREAM" . ((number "1" 544 . 545)))
          ("CPPUNIT_HAVE_UNISTD_H" . ((number "1" 3267 . 3268)))
          ("CPPUNIT_HAVE_DLERROR" . ((number "1" 868 . 869)))
          ("CPPUNIT_PACKAGE" . ((string "\"cppunit\"" 3350 . 3359)))
          ("CPPUNIT_PACKAGE_STRING" . ((string "\"\"" 3772 . 3774)))
          ("CPPUNIT_PACKAGE_NAME" . ((string "\"\"" 3637 . 3639)))
          ("CPPUNIT_HAVE_DLFCN_H" . ((number "1" 996 . 997)))
          ("CPPUNIT_HAVE_FINITE" . ((number "1" 1118 . 1119)))
          ("_INCLUDE_CPPUNIT_CONFIG_AUTO_H" . ((number "1" 79 . 80)))
          ("CPPUNIT_HAVE_SYS_TYPES_H" . ((number "1" 3136 . 3137)))
          ("CPPUNIT_PACKAGE_BUGREPORT" . ((string "\"\"" 3518 . 3520)))
          ("CPPUNIT_USE_TYPEINFO_NAME" . ((symbol "CPPUNIT_HAVE_RTTI" 4299 . 4316)))
          ("CPPUNIT_HAVE_ISFINITE" . ((number "1" 1476 . 1477)))
          )
)
    (semanticdb-table "Test.h"
      :major-mode 'c-mode
      :tags 
        '( ("CPPUNIT_TEST_H" variable (:constant-flag t) nil [32 46])
            ("cppunit/Portability.h" include (:system-flag t) nil [48 80])
            ("string" include (:system-flag t) nil [81 98])
            ("TestResult" type
               (:prototype t
                :type "class")
                nil [119 136])
            ("TestPath" type
               (:prototype t
                :type "class")
                nil [137 152])
            ("Test" variable (:type ("CPPUNIT_API" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [560 3956]))          
      :file "Test.h"
      :pointmax 4001
      :fsize 4000
      :lastmodtime '(15662 28765 0 0)
      :unmatched-syntax '((symbol 3959 . 3973) (symbol 100 . 116))
      :lexical-table 
        '(("CPPUNIT_TEST_H")
          )
)
    (semanticdb-table "Asserter.h"
      :major-mode 'c-mode
      :tags 
        '( ("CPPUNIT_ASSERTER_H" variable (:constant-flag t) nil [36 54])
            ("cppunit/AdditionalMessage.h" include (:system-flag t) nil [56 94])
            ("cppunit/SourceLine.h" include (:system-flag t) nil [95 126])
            ("string" include (:system-flag t) nil [127 144])
            ("Message" type
               (:prototype t
                :type "class")
                nil [165 179])
            ("Asserter" type
               (:members 
                  ( ("fail" function
                       (:prototype-flag t
                        :arguments 
                          ( ("message" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Message" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1370 1393])
                            ("sourceLine" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SourceLine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1427 1457])
                            ("" variable (:type ("SourceLine" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1458 1470]))                          
                        :type ("CPPUNIT_API" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1352 1473])
                    ("fail" function
                       (:prototype-flag t
                        :arguments 
                          ( ("message" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1644 1664])
                            ("sourceLine" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SourceLine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1698 1728])
                            ("" variable (:type ("SourceLine" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1729 1741]))                          
                        :type ("CPPUNIT_API" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1626 1744])
                    ("failIf" function
                       (:prototype-flag t
                        :arguments 
                          ( ("shouldFail" variable (:type "bool") (reparse-symbol arg-sub-list) [2085 2101])
                            ("message" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Message" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2137 2160])
                            ("sourceLine" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SourceLine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2196 2226])
                            ("" variable (:type ("SourceLine" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2227 2239]))                          
                        :type ("CPPUNIT_API" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2065 2242])
                    ("failIf" function
                       (:prototype-flag t
                        :arguments 
                          ( ("shouldFail" variable (:type "bool") (reparse-symbol arg-sub-list) [2649 2665])
                            ("message" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2701 2721])
                            ("sourceLine" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SourceLine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2757 2787])
                            ("" variable (:type ("SourceLine" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2788 2800]))                          
                        :type ("CPPUNIT_API" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2629 2803])
                    ("makeExpected" function
                       (:prototype-flag t
                        :arguments 
                          ( ("expectedValue" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3245 3279]))                          
                        :type ("CPPUNIT_API" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3219 3280])
                    ("makeActual" function
                       (:prototype-flag t
                        :arguments 
                          ( ("actualValue" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3715 3747]))                          
                        :type ("CPPUNIT_API" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3691 3748])
                    ("makeNotEqualMessage" function
                       (:prototype-flag t
                        :arguments 
                          ( ("expectedValue" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3800 3833])
                            ("actualValue" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3884 3915])
                            ("additionalMessage" variable
                               (:reference 1
                                :constant-flag t
                                :type ("AdditionalMessage" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3966 4010])
                            ("" variable (:type ("AdditionalMessage" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4011 4030])
                            ("shortDescription" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4082 4119]))                          
                        :type ("CPPUNIT_API" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3767 4149])
                    ("failNotEqual" function
                       (:prototype-flag t
                        :arguments 
                          ( ("expected" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4670 4691])
                            ("actual" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4733 4752])
                            ("sourceLine" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SourceLine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4794 4823])
                            ("additionalMessage" variable
                               (:reference 1
                                :constant-flag t
                                :type ("AdditionalMessage" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4864 4908])
                            ("" variable (:type ("AdditionalMessage" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4909 4928])
                            ("shortDescription" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4970 5000]))                          
                        :type ("CPPUNIT_API" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4644 5031])
                    ("failNotEqualIf" function
                       (:prototype-flag t
                        :arguments 
                          ( ("shouldFail" variable (:type "bool") (reparse-symbol arg-sub-list) [5638 5654])
                            ("expected" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5697 5718])
                            ("actual" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5762 5781])
                            ("sourceLine" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SourceLine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5825 5854])
                            ("additionalMessage" variable
                               (:reference 1
                                :constant-flag t
                                :type ("AdditionalMessage" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5897 5941])
                            ("" variable (:type ("AdditionalMessage" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5942 5961])
                            ("shortDescription" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6005 6035]))                          
                        :type ("CPPUNIT_API" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5610 6066]))                  
                :type "struct")
                nil [1241 6070]))          
      :file "Asserter.h"
      :pointmax 6120
      :fsize 6119
      :lastmodtime '(15725 53010 0 0)
      :unmatched-syntax '((symbol 6073 . 6087) (string 6036 . 6063) (punctuation 6034 . 6035) (semantic-list 5959 . 5961) (punctuation 5940 . 5941) (VOID 5605 . 5609) (STATIC 5598 . 5604) (string 5001 . 5028) (punctuation 4999 . 5000) (semantic-list 4926 . 4928) (punctuation 4907 . 4908) (VOID 4639 . 4643) (STATIC 4632 . 4638) (string 4120 . 4147) (punctuation 4118 . 4119) (semantic-list 4028 . 4030) (punctuation 4009 . 4010) (symbol 3759 . 3766) (STATIC 3752 . 3758) (symbol 3684 . 3690) (punctuation 3683 . 3684) (punctuation 3682 . 3683) (symbol 3679 . 3682) (STATIC 3672 . 3678) (symbol 3212 . 3218) (punctuation 3211 . 3212) (punctuation 3210 . 3211) (symbol 3207 . 3210) (STATIC 3200 . 3206) (semantic-list 2798 . 2800) (punctuation 2786 . 2787) (VOID 2624 . 2628) (STATIC 2617 . 2623) (semantic-list 2237 . 2239) (punctuation 2225 . 2226) (VOID 2060 . 2064) (STATIC 2053 . 2059) (semantic-list 1739 . 1741) (punctuation 1727 . 1728) (VOID 1621 . 1625) (STATIC 1614 . 1620) (semantic-list 1468 . 1470) (punctuation 1456 . 1457) (VOID 1347 . 1351) (STATIC 1340 . 1346) (symbol 146 . 162))
      :lexical-table 
        '(("CPPUNIT_ASSERTER_H")
          )
)
    (semanticdb-table "AdditionalMessage.h"
      :major-mode 'c-mode
      :tags 
        '( ("CPPUNIT_ADDITIONALMESSAGE_H" variable (:constant-flag t) nil [45 72])
            ("cppunit/Message.h" include (:system-flag t) nil [74 102])
            ("Message" variable (:type "int") nil [1373 2217]))          
      :file "AdditionalMessage.h"
      :pointmax 2277
      :fsize 2276
      :lastmodtime '(15662 28764 0 0)
      :unmatched-syntax '((symbol 2220 . 2234) (PUBLIC 1366 . 1372) (punctuation 1364 . 1365) (symbol 1346 . 1363) (symbol 1334 . 1345) (CLASS 1328 . 1333) (symbol 105 . 121))
      :lexical-table 
        '(("CPPUNIT_ADDITIONALMESSAGE_H")
          )
)
    (semanticdb-table "Outputter.h"
      :file "Outputter.h"
      :fsize 368
      :lastmodtime '(15662 28764 0 0)))
  :file "!usr!include!cppunit!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
